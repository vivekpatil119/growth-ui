{"version":3,"sources":["Utils/httpInterceptor.js","Utils/management.js","modules/management/AddRole.js","modules/management/EditRole.js","Components/LeftMenu.js","Utils/authentication.js","Components/Header.js","modules/management/RoleManagement.js","modules/management/EditUser.js","modules/management/UserManagement.js","Pages/ChangePassword.js","Pages/Login.js","Pages/ForgetPassword.js","Pages/ResetPassword.js","Utils/dsa.js","modules/DSA/DsaMakerForm.js","modules/DSA/DsaMaker.js","modules/DSA/DSACheckerForm.js","modules/DSA/DsaCheker.js","modules/DSA/Dsa.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","serverURL","handleResponse","response","data","handleError","error","message","status","get","apiURL","axios","headers","then","catch","post","bodyObj","contentType","addRole","res","console","log","MyRoleList","err","deleteRoleById","AddUser","productlist","AddEmployee","BranchList","getUserList","getUserByID","getRoleByID","getSearchUser","toast","configure","AddRole","state","show","roleName","description","errors","roleNameError","descriptionError","handleShow","setState","handleClose","props","handleChange","e","target","name","value","handleValidate","undefined","getRoleByUniqueId","verifyObj","Data","handleSubmit","ipaddress","roleId","createdDate","updatedDate","isAdd","val","obj","Date","JSON","stringify","success","type","TYPE","SUCCESS","autoClose","ERROR","this","Modal","className","aria-labelledby","centered","Header","Title","Body","pattern","maxLength","onChange","onBlur","placeholder","Footer","Button","onClick","Component","LeftMenu","src","style","height","width","overflowWrap","to","activeClassName","updatePassword","loginUser","resetPassword","forgotPassword","logout","onLogOut","sessionStorage","removeItem","history","push","RoleManagement","search","showAddModal","showEditModal","editObj","roleData","RoleList","reverse","id","roleListData","find","editRoleData","uniqueId","deleteRoleData","confirmAlert","title","buttons","label","columns","Cell","original","accessor","display","justifyContent","cursor","defaultPageSize","statusOption","EditUser","role","product","branch","userName","employeeName","mobileNo","roleOption","productOption","branchOption","invalidusername","invalidmobileNo","userNameError","employeeNameError","mobileNoError","branchError","roleError","productError","productlistData","branchListData","getUserByUniqueId","user","addUser","handleRole","handleStatus","handleProduct","handlebranch","branchcode","restrictAlphabets","key","match","preventDefault","length","onValidate","passWord","employeeId","otp","token","emailId","userBranchmapping","userProductmapping","productId","objs","maxlength","onKeyPress","options","valueKey","labelKey","getOptionLabel","option","getOptionValue","isMulti","UserManagement","userData","filtered","loading","searchList","UserList","userListData","username","Fragment","sizeUnit","size","color","UpdatePassword","invalidPassword","newpassword","invalidconfpassword","oldpassword","isSuccess","confpassword","oldpasswordError","newpasswordError","confpasswordError","parse","getItem","disabled","Login","password","isLoading","usernameError","passwordError","handleKeyDown","isLogin","setItem","marginTop","onKeyDown","alignItems","ForgetPassword","ConfirmPassword","invalidUsername","invalidConfirmPassword","otpError","ConfirmPasswordError","ResetPassword","invalidEmail","email","emailError","PanDetails","GstNumber","Gstaddress","getAllState","getAllCities","AddDSA","getCompanytypeList","getAllDSA","getDsaByUniqueId","uploadDoc","formData","FormData","Object","keys","map","append","DsaMakerForm","company","companyName","gst","panNumber","stat","city","startDate","dateOfBirth","address","addrs","gstShow","invalidPanNumber","invalidifscCode","invalidemailId","mobileNO","bankName","accountName","document","bankAccountNumber","ifscCode","hsnCode","DOB","stateCode","pan","panStatus","permanantAddress","communicationAddress","pincode","GstDetails","GSTAddress","getState","getCities","CompanytypeOption","TypeOfCompanyError","PanNumberError","dateOfBirthError","companyNameError","gstNoError","statError","cityError","pincodeError","contactNameError","mobileNOError","emailIdError","permanantAddressError","communicationAddressError","accountNameError","bankNameError","bankAccountNumberError","ifscCodeError","hsnCodeError","stateCodeError","handleName","handlestateName","GetAllCitiesData","handleCity","handleGST","GSTAddressDetails","gstNo","handleBranch","handlePan","toUpperCase","GSTData","handleifsc","handleDOB","date","handleMoment","moment","format","PanDetailData","handleCheck","panName","onDrop","picture","GetCompanyListData","ojbts","gstNumber","getPermanentAdd","forEach","addr","perAddress","GetallStateData","stateName","getAllBranchList","verifyGst","ifsccode","hsncode","phoneNumber","companyType","companyname","stateId","state_id","cityId","city_id","bankAccountName","bankAccountno","statecode","companypan","contactname","dsaData","gstStatus","dsaBranchmapping","makerId","remarkFlag","applicationNumber","gstNumberList","documentName","GSTOption","stateOption","cityOption","background","selected","dateFormat","placeholderText","showYearDropdown","showMonthDropdown","for","withIcon","withPreview","withLabel","accept","buttonText","fileTypeError","imgExtension","maxFileSize","DsaMaker","showModal","addDsa","TypeOfCompany","Status","DOJ","DSAData","remark","handleRemark","getDsalistByDSacode","dateOfInc","Companyvalue","DsaCheker","GetAllDsaList","applicationnumber","phone_number","DSACheckerForm","Dsa","dsacode","App","exact","path","component","ChangePassword","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.020b0f3b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"http://35.154.202.170:8080\";\r\nconst serverURL = \"https://cors-anywhere.herokuapp.com/\";\r\n// const Local = \"http://localhost:3000/\";\r\n// const serverURL = \"\";\r\n\r\nconst handleResponse = response => {\r\n  return {\r\n    data: response.data\r\n  };\r\n};\r\n\r\nconst handleError = error => {\r\n  const { response } = error;\r\n  return {\r\n    message: response ? response.data.message : null,\r\n    status: response ? response.status : null\r\n  };\r\n};\r\n\r\nexport const get = apiURL => {\r\n  return axios\r\n    .get(`${serverURL}${baseURL}${apiURL}`, {\r\n      headers: {\r\n        \"Access-Control-Allow-Method\": \"get\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: {}\r\n    })\r\n    .then(response => handleResponse(response))\r\n    .catch(error => handleError(error));\r\n};\r\n\r\nexport const post = (apiURL, bodyObj = {}, contentType) => {\r\n  return axios\r\n    .post(`${serverURL}${baseURL}${apiURL}`, bodyObj, {\r\n      headers: {\r\n        \"Access-Control-Allow-Method\": \"post\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": contentType || \"application/json\"\r\n      },\r\n      data: {}\r\n    })\r\n    .then(response => handleResponse(response))\r\n    .catch(error => handleError(error));\r\n};\r\n","import { get, post } from \"./httpInterceptor\";\r\n\r\n// add Role API\r\nexport const addRole = data => {\r\n  return post(`/growth-source/access/addRole`, data).then(res => {\r\n    console.log(\"RESPONSE :: Add Role ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// getRoleList API\r\nexport const MyRoleList = () => {\r\n  return get(`/growth-source/access/getAllRoles`)\r\n    .then(res => {\r\n      console.log(\"RESPONSE :: RoleList ::: \", res);\r\n      console.log(\"ROLELIST IN API\");\r\n      return res;\r\n    })\r\n    .catch(err => {\r\n      console.log(\"eroor is accured\", err);\r\n    });\r\n};\r\n\r\n// Delete RoleById API\r\nexport const deleteRoleById = data => {\r\n  return post(`/growth-source/access/deleteRoleById?roleId=${data}`).then(\r\n    res => {\r\n      console.log(\"Response :: DeleteRoleById ::: \", res);\r\n      return res;\r\n    }\r\n  );\r\n};\r\n\r\n// GetRoleById API\r\nexport const getRoleById = data => {\r\n  return post(`/growth-source/access/getRoleById?roleId=${data}`).then(res => {\r\n    console.log(\"Response :: GetRoleById ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// add User API\r\nexport const AddUser = data => {\r\n  return post(`/growth-source/authentication/addUser`, data).then(res => {\r\n    console.log(\"RESPONSE :: Add user ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// product list API\r\nexport const productlist = data => {\r\n  return post(\r\n    `/growth-source/common/getSubcategorylist?categoryid=${data}`\r\n  ).then(res => {\r\n    console.log(\"Response :: Product List ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n//  add employee API\r\nexport const AddEmployee = data => {\r\n  return post(`/growth-source/user/addEmployee`, data).then(res => {\r\n    console.log(\"Response :: Add Employee ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n//Get Branch List\r\nexport const BranchList = data => {\r\n  return post(`/growth-source/common/getBranchlist`, data).then(res => {\r\n    console.log(\"Response :: Get Branch List ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n//Logout\r\nexport const logout = () => {\r\n  return get(`/growth-source/authentication/logout`).then(res => {\r\n    console.log(\"RESPONSE :: logout ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// Get User List Api\r\nexport const getUserList = () => {\r\n  return post(`/growth-source/user/getuserlist`).then(res => {\r\n    console.log(\"RESPONSE :: Get User List ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// GEt User BY unique ID\r\nexport const getUserByID = data => {\r\n  return post(\r\n    `/growth-source/user/getUserByEmployeeId?employeeId=${data}`\r\n  ).then(res => {\r\n    console.log(\"RESPONSE :: GET USER BY ID ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// get Role By Id\r\nexport const getRoleByID = data => {\r\n  return post(`/growth-source/access/getRoleById?roleId=${data}`).then(res => {\r\n    console.log(\"RESPONSE :: GET Role BY ID ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n//  get user serach\r\nexport const getSearchUser = data => {\r\n  return post(`/growth-source/user/searchUser?searchString=${data}`).then(\r\n    res => {\r\n      console.log(\"RESPONSE :: Searched Users ::: \", res);\r\n      return res;\r\n    }\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { addRole, getRoleByID } from \"../../Utils/management\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\ntoast.configure();\r\n\r\nclass AddRole extends Component {\r\n  state = {\r\n    show: false,\r\n    roleName: \"\",\r\n    description: \"\",\r\n    errors: {\r\n      roleNameError: null,\r\n      descriptionError: null\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleShow();\r\n    if (this.props.verifyObj) {\r\n      this.getRoleByUniqueId();\r\n    }\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    this.props.addRole();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n  };\r\n\r\n  // getRoleByUniqueId = () => {\r\n  //   getRoleByID().then(response => {\r\n  //     console.log(response);\r\n  //   });\r\n  // };\r\n\r\n  getRoleByUniqueId = () => {\r\n    getRoleByID(this.props.verifyObj && this.props.verifyObj).then(response => {\r\n      let Data = response.data.data && response.data.data;\r\n      this.setState(Data);\r\n      // this.setState({\r\n      //   DSAData: Data\r\n      // });\r\n      console.log(\"hygsdygfy>>>>>\", Data);\r\n    });\r\n    console.log(\"ghsqgdjhgs.....\", this.props.verifyObj);\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const {\r\n      errors,\r\n      roleName,\r\n      description,\r\n      ipaddress,\r\n      roleId,\r\n      createdDate,\r\n      updatedDate\r\n    } = this.state;\r\n    debugger;\r\n    let isAdd = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isAdd = false;\r\n      }\r\n    }\r\n    let createdBy = null;\r\n    let updatedBy = null;\r\n\r\n    let obj = {\r\n      roleName,\r\n      description,\r\n      ipaddress,\r\n      createdDate: +new Date(createdDate),\r\n      updatedDate: +new Date(updatedDate),\r\n      roleId\r\n    };\r\n\r\n    console.log(JSON.stringify(obj));\r\n\r\n    if (isAdd) {\r\n      addRole(obj).then(response => {\r\n        console.log(response.data && response.data);\r\n\r\n        if (response.data && response.data.error === \"false\") {\r\n          toast.success(response.data.message, {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n        this.handleClose();\r\n      });\r\n    }\r\n    this.setState({ errors: { ...errors } });\r\n  };\r\n\r\n  render() {\r\n    const { show, roleName, description, errors } = this.state;\r\n    console.log(roleName);\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <Modal\r\n          className=\"add-role\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={show}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {this.props.verifyObj ? \"Edit\" : \"Add\"} Role\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <div>\r\n              <div className=\"col-md-12\">\r\n                <label>Role Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  pattern=\"\\d*\"\r\n                  maxLength=\"30\"\r\n                  className=\"form-input\"\r\n                  name=\"roleName\"\r\n                  value={roleName}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter Role name\"\r\n                />\r\n                {errors.roleNameError && (\r\n                  <span className=\"errorMsg\">Please Enter Role Name</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-2 col-md-12\">\r\n                <label>Description</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  pattern=\"\\d*\"\r\n                  maxLength=\"100\"\r\n                  className=\"form-input\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter description\"\r\n                />\r\n                {errors.descriptionError && (\r\n                  <span className=\"errorMsg\">Please enter description</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button className=\"btn-success\" onClick={this.handleSubmit}>\r\n              {this.props.verifyObj ? \"Update\" : \"Create\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddRole;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { addRole } from \"../../Utils/management\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\ntoast.configure();\r\n\r\nclass EditRole extends Component {\r\n  state = {\r\n    show: false,\r\n    roleName: \"\",\r\n    description: \"\",\r\n    errors: {\r\n      roleNameError: null,\r\n      descriptionError: null\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleShow();\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    // this.props.addRole();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { errors, roleName, description } = this.state;\r\n    let isAdd = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isAdd = false;\r\n      }\r\n    }\r\n    let obj = { roleName, description };\r\n    if (isAdd) {\r\n      addRole(obj).then(response => {\r\n        console.log(response);\r\n\r\n        if (response.data && response.data.error === \"false\") {\r\n          // toast.success(\"Role Added Successfully\", {\r\n          //   type: toast.TYPE.SUCCESS,\r\n          //   autoClose: 2000\r\n          // });\r\n          console.log(response.data && response.data);\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n        this.handleClose();\r\n      });\r\n    }\r\n    this.setState({ errors: { ...errors } });\r\n  };\r\n\r\n  render() {\r\n    const { show, roleName, description, errors } = this.state;\r\n    console.log(roleName);\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <Modal\r\n          className=\"add-role\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={show}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Edit Role</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <div>\r\n              <div className=\"col-md-12\">\r\n                <label>Role Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"roleName\"\r\n                  value={roleName}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter role name\"\r\n                />\r\n                {errors.roleNameError && (\r\n                  <span className=\"errorMsg\">Please enter role name</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mt-2 col-md-12\">\r\n                <label>Description</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter description\"\r\n                />\r\n                {errors.descriptionError && (\r\n                  <span className=\"errorMsg\">Please enter description</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button className=\"btn-success\" onClick={this.handleSubmit}>\r\n              Create\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditRole;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import Logo from \"../../public/Assets/Images/admin.png\";\r\n\r\nexport class LeftMenu extends Component {\r\n  render() {\r\n    return (\r\n      <aside className=\"LeftMenu\">\r\n        <div className=\"logo-image\"></div>\r\n        <ul className=\"dash_ul\">\r\n          <div className=\"row px-3\">\r\n            <div>\r\n              <img\r\n                src=\"./assets/images/admin.png\"\r\n                style={{ height: \"100px\", width: \"100px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"text-center p-2 mt-4\">\r\n              <h6 className=\"title-orange\">Welcome </h6>\r\n              <h6 style={{ overflowWrap: \"break-word\" }} className=\"text-white\">\r\n                User\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"custom-hr\">\r\n            <hr />\r\n          </div>\r\n          <li>\r\n            <NavLink to=\"/role-management\" activeClassName=\"active\">\r\n              <i className=\"fas fa-user-tag\"></i>\r\n              <span>Role Management</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/user-management\" activeClassName=\"active\">\r\n              <i className=\"fas fa-user\"></i>\r\n              <span>&nbsp;User Management</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"#\" activeClassName=\"active\">\r\n              <i className=\"fab fa-keycdn fa-lg\"></i>\r\n              <span>Access Management</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/dsa-maker\" activeClassName=\"active\">\r\n              <i className=\"fas fa-money-check-alt\"></i>\r\n              <span>DSA Maker</span>\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <NavLink to=\"/dsa-checker\" activeClassName=\"active\">\r\n              <i className=\"fas fa-money-check-alt\"></i>\r\n              <span>DSA Checker</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/dsa\" activeClassName=\"active\">\r\n              <i className=\"fas fa-money-check-alt\"></i>\r\n              <span>DSA</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"#\" activeClassName=\"active\">\r\n              <i className=\"fas fa-sitemap\"></i>\r\n              <span>Hierarchy</span>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/change-password\" activeClassName=\"active\">\r\n              <i className=\"fas fa-unlock-alt\"></i>\r\n              <span>Change Password</span>\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftMenu;\r\n","import { get, post } from \"./httpInterceptor\";\r\n\r\n// Update Password\r\nexport const updatePassword = data => {\r\n  return post(`/growth-source/authentication/updatePassword`, data).then(\r\n    res => {\r\n      console.log(\"RESPONSE :: Update Password ::: \", res);\r\n      return res;\r\n    }\r\n  );\r\n};\r\n\r\n// Login Api\r\nexport const loginUser = data => {\r\n  return post(`/growth-source/authentication/authenticate`, data).then(res => {\r\n    console.log(\"RESPONSE :: Login ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// Reset Password\r\nexport const resetPassword = data => {\r\n  return post(`/growth-source/authentication/resetPassword`, data).then(res => {\r\n    console.log(\"RESPONSE :: Reset ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// Forgot password\r\nexport const forgotPassword = data => {\r\n  return post(\r\n    `/growth-source/authentication/forgotPassword?userName=${data}`,\r\n    data\r\n  ).then(res => {\r\n    console.log(\"RESPONSE :: Reset ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n//http://13.126.20.61:8080/growth-source/authentication/logout\r\n\r\n// LOGOUT\r\n\r\nexport const logout = () => {\r\n  return get(`/growth-source/authentication/logout`).then(res => {\r\n    console.log(\"RESPONSE :: logout ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { logout } from \"../Utils/authentication\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nexport class Header extends Component {\r\n  onLogOut = () => {\r\n    logout().then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        sessionStorage.removeItem(\"userName\");\r\n        this.props.history.push(\"/\");\r\n        toast.success(\"Logout Successfully\", {\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 4000\r\n        });\r\n      }\r\n      if (response.data && response.data.error === \"true\") {\r\n        toast.error(response.data.message, {\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 4000\r\n        });\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"dash_head justify-content-end logout-btn\">\r\n          <a className=\"button\" onClick={this.onLogOut}>\r\n            <i className=\"logout-icon fas fa-power-off\"></i>\r\n            <div className=\"logout font-weight-bold\"> Logout </div>\r\n          </a>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport AddRole from \"./AddRole\";\r\nimport EditRole from \"../management/EditRole\";\r\nimport { MyRoleList, deleteRoleById } from \"../../Utils/management\";\r\nimport LeftMenu from \"../../Components/LeftMenu\";\r\nimport Header from \"../../Components/Header\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\ntoast.configure();\r\n\r\nexport class RoleManagement extends Component {\r\n  state = {\r\n    search: \"\",\r\n    showAddModal: false,\r\n    showEditModal: false,\r\n    editObj: \"\",\r\n    verifyObj: \"\",\r\n    roleData: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.RoleList();\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  RoleList = () => {\r\n    MyRoleList().then(response => {\r\n      console.log(\">>>>>\", response && response);\r\n\r\n      this.setState({\r\n        roleData:\r\n          response.data && response.data.data\r\n            ? response.data.data.reverse()\r\n            : []\r\n      });\r\n      // console.log(\"RoleData\", this.state.roleData && this.state.roleData);\r\n    });\r\n  };\r\n\r\n  addRole = id => {\r\n    let roleListData = this.state.roleData.find(\r\n      roleListData => roleListData.roleId === id\r\n    );\r\n    this.setState(\r\n      {\r\n        showAddModal: !this.state.showAddModal,\r\n        verifyObj: roleListData ? roleListData.roleId : null\r\n      },\r\n      () => this.RoleList()\r\n    );\r\n  };\r\n\r\n  editRoleData = val => {\r\n    let obj = this.state.roleData.find(obj => obj.roleId === val);\r\n    this.setState(\r\n      {\r\n        showEditModal: !this.state.showEditModal,\r\n        editObj: obj ? obj.uniqueId : null\r\n      },\r\n      () => this.RoleList()\r\n    );\r\n  };\r\n\r\n  deleteRoleData = obj => {\r\n    confirmAlert({\r\n      title: \"Confirm to Delete\",\r\n      message: \"Are you sure to do this?\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes, Delete It!\",\r\n          onClick: () => {\r\n            deleteRoleById(obj).then(response => {\r\n              if (response.data && response.data.error === \"false\") {\r\n                toast.success(response.data.message, {\r\n                  type: toast.TYPE.SUCCESS,\r\n                  autoClose: 2000\r\n                });\r\n                this.RoleList();\r\n              }\r\n              // if status is true\r\n              if (response.data && response.data.error === \"true\") {\r\n                toast.error(response.data.message, {\r\n                  type: toast.TYPE.ERROR,\r\n                  autoClose: 2000\r\n                });\r\n                this.RoleList();\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => {\r\n            // toast.error(\"Role Can Not be Deleted\", {\r\n            //   type: toast.TYPE.ERROR,\r\n            //   autoClose: 2000\r\n\r\n            // });\r\n            this.RoleList();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { search, roleData, editObj, verifyObj } = this.state;\r\n    console.log(roleData);\r\n\r\n    const columns = [\r\n      // {\r\n      //   Header: \"SR. No\",\r\n      //   width: 150,\r\n      //   Cell: ({ original }) => {\r\n      //     return original.roleId;\r\n      //   }\r\n      // },\r\n      {\r\n        Header: \"Role Name\",\r\n        width: 250,\r\n        Cell: ({ original }) => {\r\n          return original.roleName;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Description\",\r\n        Cell: ({ original }) => {\r\n          return original.description;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Action\",\r\n        width: 200,\r\n        accessor: \"delete\",\r\n        accessor: \"edit\",\r\n\r\n        Cell: ({ original }) => {\r\n          return (\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <i\r\n                onClick={() => this.deleteRoleData(original.roleId)}\r\n                className=\"fa fa-trash\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n              <i\r\n                onClick={() => this.addRole(original.roleId)}\r\n                className=\"fas fa-user-edit\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n              {/* {this.state.showEditModal && (\r\n                <EditRole editObj={this.state.editObj} />\r\n              )} */}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      // {\r\n      //   Header: \"EDit\",\r\n      //   accessor: \"edit\",\r\n\r\n      //   Cell: ({ original }) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <i\r\n      //           onClick={() => this.editRoleData(original.roleId)}\r\n      //           className=\"fa fa-trash\"\r\n      //         />\r\n      //         <i class=\"fas fa-user-edit\"></i>\r\n      //       </div>\r\n      //     );\r\n      //   }\r\n      // }\r\n    ];\r\n    return (\r\n      <div className=\"dash_grid\">\r\n        <ToastContainer />\r\n        <LeftMenu />\r\n        <main className=\"bg-white\">\r\n          <Header {...this.props} />\r\n          <section className=\"container-fluid\">\r\n            <h5 className=\"text-center mt-5 mx-auto user-box\">\r\n              Role Management\r\n            </h5>\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              {/* <div className=\"form-group m-0 search-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"search\"\r\n                  value={search}\r\n                  onChange={this.handleChange}\r\n                  // onBlur={this.handleValidate}\r\n                  placeholder=\"Search...\"\r\n                />\r\n              </div> */}\r\n              <button onClick={this.addRole} className=\"add-btn ml-auto\">\r\n                {\" \"}\r\n                Add Role{\" \"}\r\n              </button>\r\n              {this.state.showAddModal && (\r\n                <AddRole verifyObj={verifyObj} addRole={this.addRole} />\r\n              )}\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <ReactTable\r\n                data={roleData}\r\n                columns={columns}\r\n                defaultPageSize={10}\r\n              />\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoleManagement;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  MyRoleList,\r\n  productlist,\r\n  AddEmployee,\r\n  AddUser,\r\n  BranchList,\r\n  getUserByID\r\n} from \"../../Utils/management\";\r\n// import { addUser } from \"../../Utils/management\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\ntoast.configure();\r\n\r\nconst statusOption = [\r\n  { id: 1, value: \"Active\", label: \"Active\" },\r\n  { id: 2, value: \"Inactive\", label: \"Inactive\" }\r\n];\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    show: false,\r\n    role: null,\r\n    status: null,\r\n    product: null,\r\n    branch: null,\r\n    userName: \"\",\r\n    employeeName: \"\",\r\n    mobileNo: \"\",\r\n    roleOption: [],\r\n    productOption: [],\r\n    branchOption: [],\r\n\r\n    invalidusername: false,\r\n    invalidmobileNo: false,\r\n    errors: {\r\n      userNameError: null,\r\n      employeeNameError: null,\r\n      mobileNoError: null,\r\n      branchError: null,\r\n      roleError: null,\r\n      productError: null\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleShow();\r\n    // this.handleStatus();\r\n    this.RoleList();\r\n    this.productlistData();\r\n    this.branchListData();\r\n    if (this.props.verifyObj) {\r\n      this.getUserByUniqueId();\r\n    }\r\n    console.log(\"rahul\", this.props.verifyObj);\r\n  }\r\n\r\n  RoleList = () => {\r\n    MyRoleList().then(response => {\r\n      this.setState({\r\n        roleOption:\r\n          response.data && response.data.data ? response.data.data : []\r\n      });\r\n      console.log(\r\n        \"roleoption\",\r\n        this.state.roleOption.reverse() && this.state.roleOption.reverse()\r\n      );\r\n    });\r\n  };\r\n\r\n  productlistData = () => {\r\n    let categoryid = 1;\r\n    productlist(categoryid).then(response => {\r\n      this.setState({\r\n        productOption:\r\n          response.data && response.data.data ? response.data.data : []\r\n      });\r\n      console.log(\"product\", this.state.productOption);\r\n    });\r\n  };\r\n\r\n  branchListData = () => {\r\n    BranchList().then(response => {\r\n      this.setState({\r\n        branchOption:\r\n          response.data && response.data.data ? response.data.data : []\r\n      });\r\n      console.log(\"branchoption\", this.state.branchOption);\r\n    });\r\n  };\r\n\r\n  getUserByUniqueId = () => {\r\n    getUserByID(this.props.verifyObj && this.props.verifyObj).then(response => {\r\n      let Data = response.data.data && response.data.data.user;\r\n      this.setState(Data);\r\n      // this.setState({\r\n      //   DSAData: Data\r\n      // });\r\n      console.log(\"hygsdygfy>>>>>\", Data);\r\n    });\r\n    console.log(\"ghsqgdjhgs.....\", this.props.verifyObj);\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    this.props.addUser();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleRole = role => {\r\n    this.setState({ role });\r\n    console.log(\"Role....\", role && role);\r\n  };\r\n\r\n  handleStatus = status => {\r\n    this.setState({ status });\r\n    console.log(`After Option selected:`, status && status.label);\r\n  };\r\n  handleProduct = product => {\r\n    this.setState({ product });\r\n    console.log(\"product\", product);\r\n  };\r\n\r\n  handlebranch = branch => {\r\n    this.setState({ branch });\r\n    console.log(\"branch\", branch && branch.branchcode);\r\n  };\r\n\r\n  restrictAlphabets = e => {\r\n    const regx = \"^[0-9]*$\";\r\n    if (e.key.match(regx)) {\r\n      return true;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n    if (name === \"userName\") {\r\n      let usernameRegx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (value && !value.match(usernameRegx)) {\r\n        this.setState({\r\n          invalidusername: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidusername: false\r\n        });\r\n      }\r\n    }\r\n    if (name === \"mobileNo\") {\r\n      if (value && value.length < 10) {\r\n        this.setState({\r\n          invalidmobileNo: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidmobileNo: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onValidate = name => {\r\n    const { role, branch, product, errors } = this.state;\r\n    if (name === \"role\") {\r\n      if (role === \"\" || role === null || role === undefined) {\r\n        this.setState({ errors: { ...errors, roleError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, roleError: false } });\r\n      }\r\n    }\r\n    if (name === \"branch\") {\r\n      if (branch === \"\" || branch === null || branch === undefined) {\r\n        this.setState({ errors: { ...errors, branchError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, branchError: false } });\r\n      }\r\n    }\r\n    if (name === \"product\") {\r\n      if (product === \"\" || product === null || product === undefined) {\r\n        this.setState({ errors: { ...errors, productError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, productError: false } });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    debugger;\r\n    const {\r\n      errors,\r\n      userName,\r\n      employeeName,\r\n      mobileNo,\r\n      role,\r\n      product,\r\n      branch,\r\n      passWord,\r\n      branchError,\r\n      productError,\r\n      createdDate,\r\n      updatedDate,\r\n      employeeId,\r\n      ipaddress,\r\n      otp,\r\n\r\n      token,\r\n      id,\r\n      status\r\n    } = this.state;\r\n    console.log(status && status.label);\r\n\r\n    let isAdd = true;\r\n    if (this.props.verifyObj) {\r\n      for (var val in errors) {\r\n        if (errors[val]) {\r\n          errors[val] = true;\r\n          isAdd = false;\r\n        }\r\n      }\r\n    } else {\r\n      for (var val in errors) {\r\n        if (errors[val] === null || errors[val]) {\r\n          errors[val] = true;\r\n          isAdd = false;\r\n        }\r\n      }\r\n    }\r\n    // let passWord = null;\r\n    // let createdDate = null;\r\n    // let updatedDate = null;\r\n    // let employeeId = null;\r\n    let createdBy = null;\r\n    let updatedBy = null;\r\n\r\n    // let ipaddress = null;\r\n    // let otp = 734676;\r\n    // let token = null;\r\n    // let id = 4;\r\n    // let productType = 1;\r\n    // let name = \"rahul Madhavi\";\r\n    // let emailID = \"rahul@gmail.com\";\r\n    // let branch = \"navi mumbai\";\r\n\r\n    // let objs = {\r\n    //   productType,\r\n    //   name,\r\n    //   branch,\r\n    //   emailID\r\n    // };\r\n    // if (isAdd) {\r\n    //   AddEmployee(objs)\r\n    //     .then(response => {\r\n    //       console.log(response && response.data);\r\n    //     })\r\n    //     .catch(errors => {\r\n    //       console.log(errors, \"error\");\r\n    //     });\r\n    // }\r\n\r\n    // if (role) {\r\n    //   role.createdDate = +new Date(role.createdDate);\r\n    // }\r\n    // let status = \"ACTIVE\";\r\n\r\n    let obj = {\r\n      userName,\r\n      employeeName,\r\n      mobileNo,\r\n      role,\r\n      passWord,\r\n      status: status.value,\r\n      createdDate: +new Date(createdDate),\r\n      updatedDate: +new Date(updatedDate),\r\n      employeeId,\r\n      ipaddress,\r\n      otp,\r\n      token,\r\n      id\r\n    };\r\n\r\n    console.log(\"object\", JSON.stringify(obj));\r\n\r\n    if (isAdd) {\r\n      AddUser(obj).then(response => {\r\n        if (response.data && response.data.error === \"false\") {\r\n          console.log(response.data && response.data);\r\n          toast.success(response.data.message, {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n\r\n          let name = employeeName;\r\n          let employeeId = response.data.data && response.data.data.employeeId;\r\n          let emailId = userName;\r\n          let userBranchmapping = [\r\n            {\r\n              employeeId: employeeId,\r\n              branchcode: branch.branchcode\r\n            }\r\n          ];\r\n          let userProductmapping = [\r\n            {\r\n              employeeId: employeeId,\r\n              productId: product.id\r\n            }\r\n          ];\r\n          if (isAdd && isAdd) {\r\n            let objs = {\r\n              name,\r\n              employeeId,\r\n              emailId,\r\n              userBranchmapping,\r\n              userProductmapping\r\n            };\r\n            console.log(JSON.stringify(objs));\r\n\r\n            AddEmployee(objs).then(response => {\r\n              console.log(response.data && response.data);\r\n            });\r\n            console.log(response.data && response.data);\r\n          }\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n        this.handleClose();\r\n      });\r\n    }\r\n    this.setState({ errors: { ...errors } });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      show,\r\n      userName,\r\n      employeeName,\r\n      mobileNo,\r\n      role,\r\n      roleOption,\r\n      product,\r\n      productOption,\r\n      branch,\r\n      branchOption,\r\n      invalidusername,\r\n      invalidmobileNo,\r\n      roleError,\r\n      productError,\r\n      status,\r\n      errors\r\n    } = this.state;\r\n    console.log(\"hfkhdf\", roleError);\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <Modal\r\n          className=\"add-role\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={show}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {this.props.verifyObj ? \"Edit\" : \"Add\"} User\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\">\r\n            <div>\r\n              <div className=\"col-md-12\">\r\n                <label>Employee Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"employeeName\"\r\n                  value={employeeName}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter Employee name\"\r\n                />\r\n                {errors.employeeNameError && (\r\n                  <span className=\"errorMsg\">Please enter Employee name</span>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 mt-3\">\r\n                <label>Email ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"userName\"\r\n                  value={userName}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter Email ID\"\r\n                />\r\n                {errors.userNameError && (\r\n                  <span className=\"errorMsg\">Please enter Email ID</span>\r\n                )}\r\n                {invalidusername && (\r\n                  <span className=\"errorMsg\">Please enter valid Email ID</span>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 mt-3\">\r\n                <label>Mobile Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  pattern=\"\\d*\"\r\n                  maxLength=\"10\"\r\n                  className=\"form-input\"\r\n                  name=\"mobileNo\"\r\n                  value={mobileNo}\r\n                  maxlength=\"10\"\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyPress={this.restrictAlphabets}\r\n                  placeholder=\"Enter Mobile Number\"\r\n                />\r\n                {errors.mobileNoError && (\r\n                  <span className=\"errorMsg\">Please enter Mobile Number</span>\r\n                )}\r\n                {invalidmobileNo && (\r\n                  <span className=\"errorMsg\">\r\n                    Please enter Valid Mobile Number\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 mt-3\">\r\n                <label>Role</label>\r\n                <Select\r\n                  value={role}\r\n                  onChange={this.handleRole}\r\n                  // className=\"selection\"\r\n                  onBlur={() => this.onValidate(\"role\")}\r\n                  placeholder=\"Role\"\r\n                  options={roleOption}\r\n                  valueKey=\"roleId\"\r\n                  labelKey=\"roleName\"\r\n                  getOptionLabel={option => option[\"roleName\"]}\r\n                  getOptionValue={option => option[\"roleId\"]}\r\n                />\r\n                {errors.roleError && (\r\n                  <span className=\"errorMsg\">Please select role</span>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 mt-3\">\r\n                <label>Status</label>\r\n                <Select\r\n                  value={status}\r\n                  name=\"status\"\r\n                  onChange={this.handleStatus}\r\n                  options={statusOption}\r\n                  placeholder=\"Status\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12 mt-3\">\r\n                <label>Product</label>\r\n                <Select\r\n                  value={product}\r\n                  onChange={this.handleProduct}\r\n                  isMulti\r\n                  options={productOption}\r\n                  onBlur={() => this.onValidate(\"product\")}\r\n                  placeholder=\"Product\"\r\n                  valueKey=\"id\"\r\n                  labelKey=\"subcat_type\"\r\n                  getOptionLabel={option => option[\"subcat_type\"]}\r\n                  getOptionValue={option => option[\"id\"]}\r\n                />\r\n                {errors.productError && (\r\n                  <span className=\"errorMsg\">Please select Product</span>\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 mt-3\">\r\n                <label>Branch</label>\r\n                <Select\r\n                  value={branch}\r\n                  onChange={this.handlebranch}\r\n                  isMulti\r\n                  options={branchOption}\r\n                  onBlur={() => this.onValidate(\"branch\")}\r\n                  placeholder=\"Branch\"\r\n                  valueKey=\"id\"\r\n                  labelKey=\"branchname\"\r\n                  getOptionLabel={option => option[\"branchname\"]}\r\n                  getOptionValue={option => option[\"id\"]}\r\n                />\r\n                {errors.branchError && (\r\n                  <span className=\"errorMsg\">Please select Branch</span>\r\n                )}\r\n              </div>\r\n              {/* <div className=\"form-group mt-2 col-md-12\">\r\n                <label>Description</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  placeholder=\"Enter description\"\r\n                />\r\n                {errors.descriptionError && (\r\n                  <span className=\"errorMsg\">Please enter description</span>\r\n                )}\r\n              </div> */}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button className=\"btn-success\" onClick={this.handleSubmit}>\r\n              {this.props.verifyObj ? \"Update\" : \"Create\"}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;\r\n","import React, { Component } from \"react\";\r\nimport EditUser from \"./EditUser\";\r\nimport { getUserList, getSearchUser } from \"../../Utils/management\";\r\nimport LeftMenu from \"../../Components/LeftMenu\";\r\nimport Header from \"../../Components/Header\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport \"react-table/react-table.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\ntoast.configure();\r\n\r\nexport class UserManagement extends Component {\r\n  state = {\r\n    search: \"\",\r\n    showAddModal: false,\r\n    showEditModal: false,\r\n    verifyObj: \"\",\r\n    userData: [],\r\n    filtered: [],\r\n    loading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.searchList()) {\r\n      this.UserList();\r\n    } else {\r\n      this.searchList();\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState(\r\n      {\r\n        [e.target.name]: e.target.value\r\n      },\r\n      () => this.searchList()\r\n    );\r\n  };\r\n\r\n  UserList = () => {\r\n    getUserList().then(response => {\r\n      this.setState(\r\n        {\r\n          userData:\r\n            response.data && response.data.data ? response.data.data : [],\r\n          loading: false\r\n        },\r\n        console.log(\"hwjgdjgg\", this.state.userData && this.state.userData)\r\n      );\r\n    });\r\n  };\r\n\r\n  searchList = () => {\r\n    const { search } = this.state;\r\n    getSearchUser(search).then(response => {\r\n      this.setState({\r\n        filtered: response.data && response.data.data ? response.data.data : []\r\n      });\r\n      console.log(\"gsdh\", this.state.filtered && this.state.filtered);\r\n    });\r\n  };\r\n\r\n  addUser = id => {\r\n    let userListData = this.state.userData.find(\r\n      userListData => userListData.employeeId === id\r\n    );\r\n    console.log(\"hdbfwjf\", userListData && userListData);\r\n\r\n    this.setState(\r\n      {\r\n        showAddModal: !this.state.showAddModal,\r\n        verifyObj: userListData ? userListData.employeeId : null\r\n      },\r\n      () => this.UserList()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { search, userData, verifyObj, filtered, loading } = this.state;\r\n    console.log(loading);\r\n\r\n    console.log(\"filtered \", filtered && filtered);\r\n    console.log(\"bkshskd\", userData && userData);\r\n    const columns = [\r\n      {\r\n        Header: \"User Id\",\r\n        Cell: ({ original }) => {\r\n          return original.employeeId;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Employee Name\",\r\n        Cell: ({ original }) => {\r\n          return original.name;\r\n        }\r\n      },\r\n\r\n      {\r\n        Header: \"Email ID\",\r\n        Cell: ({ original }) => {\r\n          return original.username;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Mobile No\",\r\n        Cell: ({ original }) => {\r\n          return original.mobileNo;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Role\",\r\n        Cell: ({ original }) => {\r\n          return original.role;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        Cell: ({ original }) => {\r\n          return original.status;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Action\",\r\n        accessor: \"edit\",\r\n\r\n        Cell: ({ original }) => {\r\n          return (\r\n            <div>\r\n              <i\r\n                onClick={() => this.addUser(original.employeeId)}\r\n                className=\"fas fa-user-edit\"\r\n                style={{ cursor: \"pointer\" }}\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading ? (\r\n          <div className=\"spinner-load\">\r\n            <ClipLoader\r\n              className=\"loader\"\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#123abc\"}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"dash_grid sweet-loading\">\r\n            <LeftMenu />\r\n            <main className=\"bg-white\">\r\n              <Header {...this.props} />\r\n              <ToastContainer />\r\n              <section className=\"container-fluid\">\r\n                <h5 className=\"text-center mt-5 mx-auto user-box\">\r\n                  User Management\r\n                </h5>\r\n                <div className=\"d-flex align-items-center mt-5\">\r\n                  <div className=\"form-group m-0 search-input\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"search\"\r\n                      value={search}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Search...\"\r\n                    />\r\n                  </div>\r\n                  <button onClick={this.addUser} className=\"add-btn ml-auto\">\r\n                    {\" \"}\r\n                    Add User{\" \"}\r\n                  </button>\r\n                  {this.state.showAddModal && (\r\n                    <EditUser verifyObj={verifyObj} addUser={this.addUser} />\r\n                  )}\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <ReactTable\r\n                    data={userData}\r\n                    columns={columns}\r\n                    defaultPageSize={10}\r\n                  />\r\n                </div>\r\n              </section>\r\n            </main>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserManagement;\r\n","import React, { Component } from \"react\";\r\nimport { updatePassword } from \"../Utils/authentication\";\r\nimport Header from \"../Components/Header\";\r\nimport LeftMenu from \"../Components/LeftMenu\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nclass UpdatePassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userName: \"\",\r\n      newpassword: \"\",\r\n      oldpassword: \"\",\r\n      confpassword: \"\",\r\n      invalidPassword: false,\r\n      invalidconfpassword: false,\r\n      errors: {\r\n        oldpasswordError: null,\r\n        newpasswordError: null,\r\n        confpasswordError: null\r\n      }\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let data = JSON.parse(sessionStorage.getItem(\"userName\"));\r\n    console.log(\"data\", data && data.userName);\r\n    this.setState({\r\n      userName: data && data.userName\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n      console.log(errors);\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n      console.log(errors);\r\n    }\r\n\r\n    if (name === \"newpassword\") {\r\n      let passwordRegx = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n      if (value && !value.match(passwordRegx)) {\r\n        this.setState({\r\n          invalidPassword: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidPassword: false\r\n        });\r\n      }\r\n    }\r\n    if (name === \"confpassword\") {\r\n      if (value && value !== this.state.newpassword) {\r\n        this.setState({\r\n          invalidconfpassword: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidconfpassword: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const {\r\n      errors,\r\n      userName,\r\n      invalidPassword,\r\n      invalidconfpassword,\r\n      oldpassword,\r\n      newpassword,\r\n      confpassword\r\n    } = this.state;\r\n\r\n    let isSuccess = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isSuccess = false;\r\n      }\r\n    }\r\n\r\n    // let data = JSON.parse(sessionStorage.getItem(\"userName\"));\r\n    // console.log(\"data\", data && data);\r\n    let username = userName;\r\n    // console.log(UserData.password);\r\n    // let username = data.userName;\r\n    // console.log(userName && userName);\r\n\r\n    let obj = { newpassword, oldpassword, username };\r\n    if (isSuccess) {\r\n      updatePassword(obj).then(response => {\r\n        console.log(\"res------------>\", response);\r\n        if (response.data && response.data.error === \"false\") {\r\n          toast.success(response.data.message, {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ errors: { ...errors } });\r\n    e.preventDefault();\r\n    this.setState({\r\n      newpassword: \"\",\r\n      oldpassword: \"\",\r\n      confpassword: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      newpassword,\r\n      oldpassword,\r\n      confpassword,\r\n      invalidPassword,\r\n      invalidconfpassword,\r\n      errors\r\n    } = this.state;\r\n    return (\r\n      <div className=\"dash_grid\">\r\n        <ToastContainer />\r\n        <LeftMenu />\r\n        <main className=\"bg-white\">\r\n          <Header {...this.props} />\r\n          <section className=\"tab-body\">\r\n            <h5 className=\"text-center mt-3 mb-5 mx-auto user-box\">\r\n              Change Password\r\n            </h5>\r\n            <div className=\"row\">\r\n              <div style={{ width: \"400px\" }} className=\"content col-md-5\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-input\"\r\n                    name=\"oldpassword\"\r\n                    value={oldpassword}\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handleValidate}\r\n                    placeholder=\"Old password\"\r\n                  />\r\n                  {errors.oldpasswordError && (\r\n                    <span className=\"errorMsg\">Please enter old password</span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-input\"\r\n                    name=\"newpassword\"\r\n                    value={newpassword}\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handleValidate}\r\n                    placeholder=\"New password\"\r\n                  />\r\n                  {errors.newpasswordError && (\r\n                    <span className=\"errorMsg\">Please enter new password</span>\r\n                  )}\r\n                  {invalidPassword && (\r\n                    <span className=\"errorMsg\">\r\n                      Password must contain at least 8 characters, including\r\n                      uppercase, lowercase and numbers\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-input\"\r\n                    name=\"confpassword\"\r\n                    value={confpassword}\r\n                    onChange={this.handleChange}\r\n                    onBlur={this.handleValidate}\r\n                    placeholder=\"Confirm password\"\r\n                  />\r\n                  {errors.confpasswordError && (\r\n                    <span className=\"errorMsg\">\r\n                      Please enter confirm password\r\n                    </span>\r\n                  )}\r\n                  {invalidconfpassword && (\r\n                    <span className=\"errorMsg\">\r\n                      Confirm password does not match\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    onClick={this.handleSubmit}\r\n                    disabled={invalidconfpassword}\r\n                    className=\"form-submit\"\r\n                  >\r\n                    Update Password\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-7\">\r\n                <img\r\n                  className=\"px-5\"\r\n                  src=\"./assets/images/update-password.jpg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdatePassword;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ClipLoader } from \"react-spinners\";\r\nimport { loginUser } from \"../Utils/authentication\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    isLoading: false,\r\n    invalidusername: false,\r\n    errors: {\r\n      usernameError: null,\r\n      passwordError: null\r\n    }\r\n  };\r\n  handleKeyDown = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n    if (name === \"username\") {\r\n      let usernameRegx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (value && !value.match(usernameRegx)) {\r\n        this.setState({\r\n          invalidusername: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidusername: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { errors, username, password } = this.state;\r\n    let isLogin = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isLogin = false;\r\n      }\r\n    }\r\n\r\n    let obj = { username, password };\r\n    if (isLogin) {\r\n      loginUser(obj).then(response => {\r\n        console.log(\"LOgin.....\", response);\r\n        this.setState({ isLoading: true });\r\n        if (response.data && response.data.error === \"false\") {\r\n          sessionStorage.setItem(\r\n            \"userName\",\r\n            JSON.stringify(response.data.data)\r\n          );\r\n          this.props.history.push(\"/role-management\");\r\n          toast.success(response.data.message, {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n          console.log(response.data && response.data);\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n          // return false;\r\n        }\r\n      });\r\n    }\r\n    this.setState({ errors: { ...errors } });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { username, password, invalidusername, errors } = this.state;\r\n    return (\r\n      <div>\r\n        <section className=\"login-section\">\r\n          <ToastContainer />\r\n          <div className=\"page-container\">\r\n            <div\r\n              style={{ width: \"450px\", marginTop: \"140px\" }}\r\n              className=\"content\"\r\n            >\r\n              <h3 className=\"text-center title-font mb-3\">SIGN IN</h3>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyDown={this.handleKeyDown}\r\n                  placeholder=\"Email ID\"\r\n                />\r\n                {errors.usernameError && (\r\n                  <span className=\"errorMsg\">Please enter Email ID</span>\r\n                )}\r\n                {invalidusername && (\r\n                  <span className=\"errorMsg\">Please enter valid Email ID</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-input\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyDown={this.handleKeyDown}\r\n                  placeholder=\"Password\"\r\n                />\r\n                {errors.passwordError && (\r\n                  <span className=\"errorMsg\">Please enter password</span>\r\n                )}\r\n              </div>\r\n              {/* <div className=\"form-group\">\r\n                <Link to=\"#\" className=\"forgot-password\">\r\n                  <i className=\"fas fa-key mr-2 forgot-password\"></i>Forgot\r\n                  password?\r\n                </Link>\r\n              </div> */}\r\n              <div\r\n                className=\"form-group\"\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <button onClick={this.handleSubmit} className=\"form-submit\">\r\n                  {\" \"}\r\n                  Login\r\n                  {this.state.isLoading ? (\r\n                    <ClipLoader\r\n                      className=\"loader\"\r\n                      sizeUnit={\"px\"}\r\n                      size={17}\r\n                      color={\"#ffff\"}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </button>\r\n                {/* {this.state.isLoading && (\r\n                  <Spinner\r\n                    animation=\"border\"\r\n                    variant=\"primary\"\r\n                    className=\"centered-spinner\"\r\n                  />\r\n                )} */}\r\n              </div>\r\n\r\n              <div className=\"form-group m-0\">\r\n                <Link to=\"/resetpassword\" className=\"forgot-password\">\r\n                  <i className=\"fas fa-key mr-2\"></i>Forgot password?\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { resetPassword } from \"../Utils/authentication\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nexport class ForgetPassword extends Component {\r\n  state = {\r\n    username: \"\",\r\n    otp: \"\",\r\n    newpassword: \"\",\r\n    ConfirmPassword: \"\",\r\n    invalidUsername: false,\r\n    invalidConfirmPassword: false,\r\n    errors: {\r\n      usernameError: null,\r\n      otpError: null,\r\n      newpasswordError: null,\r\n      ConfirmPasswordError: null\r\n    }\r\n  };\r\n\r\n  // handleKeyDown = e => {\r\n  //   if (e.key === \"Enter\") {\r\n  //     this.handleSubmit(e);\r\n  //   }\r\n  // };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors, newpassword, ConfirmPassword } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n\r\n    if (name === \"username\") {\r\n      let usernameRegx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (value && !value.match(usernameRegx)) {\r\n        this.setState({\r\n          invalidUsername: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidUsername: false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"ConfirmPassword\") {\r\n      if (value && value !== newpassword) {\r\n        this.setState({\r\n          invalidConfirmPassword: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidConfirmPassword: false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"newpassword\") {\r\n      if (value && value !== ConfirmPassword) {\r\n        this.setState({\r\n          invalidConfirmPassword: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidConfirmPassword: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { username, newpassword, otp, errors } = this.state;\r\n    let isLogin = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isLogin = false;\r\n      }\r\n    }\r\n\r\n    let obj = { username, newpassword, otp };\r\n    if (isLogin) {\r\n      resetPassword(obj).then(response => {\r\n        console.log(\"REset.....\", response.data && response.data);\r\n        if (response.data && response.data.error === \"false\") {\r\n          this.props.history.push(\"/\");\r\n          toast.success(response.data.message, {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n          console.log(response.data && response.data);\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      otp,\r\n      newpassword,\r\n      ConfirmPassword,\r\n      invalidConfirmPassword,\r\n      invalidUsername,\r\n      errors\r\n    } = this.state;\r\n    console.log(invalidConfirmPassword && invalidConfirmPassword);\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <section className=\"login-section\">\r\n          <div className=\"page-container\">\r\n            <div\r\n              style={{ width: \"450px\", marginTop: \"140px\" }}\r\n              className=\"content\"\r\n            >\r\n              <h3 className=\"text-center title-font mb-3\">Reset Password</h3>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  pattern=\"\\d*\"\r\n                  maxLength=\"50\"\r\n                  className=\"form-input\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyDown={this.handleKeyDown}\r\n                  placeholder=\"Email ID\"\r\n                />\r\n                {errors.usernameError && (\r\n                  <span className=\"errorMsg\">Please enter email</span>\r\n                )}\r\n                {invalidUsername && (\r\n                  <span className=\"errorMsg\">Please enter valid email</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-input\"\r\n                  name=\"otp\"\r\n                  value={otp}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyDown={this.handleKeyDown}\r\n                  placeholder=\"OTP\"\r\n                />\r\n                {errors.otpError && (\r\n                  <span className=\"errorMsg\">Please enter OTP</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-input\"\r\n                  name=\"newpassword\"\r\n                  value={newpassword}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyDown={this.handleKeyDown}\r\n                  placeholder=\"New Password\"\r\n                />\r\n                {errors.newpasswordError && (\r\n                  <span className=\"errorMsg\">Please enter New password</span>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-input\"\r\n                  name=\"ConfirmPassword\"\r\n                  value={ConfirmPassword}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleValidate}\r\n                  onKeyDown={this.handleKeyDown}\r\n                  placeholder=\"Confirm Password\"\r\n                />\r\n                {errors.ConfirmPasswordError && (\r\n                  <span className=\"errorMsg\">\r\n                    Please enter Confirm password\r\n                  </span>\r\n                )}\r\n                {invalidConfirmPassword && (\r\n                  <span className=\"errorMsg\">\r\n                    Please Enter Correct Confirm Password\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button\r\n                  onClick={this.handleSubmit}\r\n                  disabled={invalidConfirmPassword}\r\n                  className=\"form-submit\"\r\n                >\r\n                  {\" \"}\r\n                  Login\r\n                </button>\r\n              </div>\r\n\r\n              {/* <div className=\"form-group m-0\">\r\n                <Link to=\"#\" className=\"forgot-password\">\r\n                  <i className=\"fas fa-key mr-2\"></i>Forgot password?\r\n                </Link>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgetPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Header from './Header';\r\nimport { forgotPassword } from \"../Utils/authentication\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      invalidEmail: false,\r\n      errors: {\r\n        emailError: null\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n    if (name === \"email\") {\r\n      let emailRegx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (value && !value.match(emailRegx)) {\r\n        this.setState({\r\n          invalidEmail: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidEmail: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { errors, invalidEmail, email } = this.state;\r\n    let userName = email;\r\n    let isSuccess = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isSuccess = false;\r\n      }\r\n    }\r\n    if (invalidEmail) {\r\n      isSuccess = false;\r\n    }\r\n    // let obj = { userName };\r\n    // console.log(obj);\r\n\r\n    if (isSuccess) {\r\n      forgotPassword(userName).then(response => {\r\n        console.log(\"gjfgd\", response.data && response.data);\r\n        if (response.data && response.data.error === \"false\") {\r\n          toast.success(response.data.message, {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      email: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, invalidEmail, errors } = this.state;\r\n    return (\r\n      <section className=\"login-section\">\r\n        <ToastContainer />\r\n\r\n        <div className=\"page-container\">\r\n          <div style={{ width: \"400px\" }} className=\"content\">\r\n            <h3 className=\"text-center title-font mb-3\">Forgot Password</h3>\r\n            <p className=\"text-center w3-text-gray mb-5\">\r\n              Enter your email address below and we'll send you an email with\r\n              instructions.\r\n            </p>\r\n\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-input\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                onBlur={this.handleValidate}\r\n                placeholder=\"Enter Email\"\r\n              />\r\n              {errors.emailError && (\r\n                <span className=\"errorMsg\">Please enter email</span>\r\n              )}\r\n              {invalidEmail && (\r\n                <span className=\"errorMsg\">Please enter valid email</span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button onClick={this.handleSubmit} className=\"form-submit\">\r\n                Send Mail\r\n              </button>\r\n            </div>\r\n\r\n            <p className=\"loginhere mt-0\">\r\n              <Link to=\"/\" className=\"loginhere-link\">\r\n                <i className=\"fas fa-sign-in-alt mr-2\"></i>Back to Login\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPassword;\r\n","import { get, post } from \"./httpInterceptor\";\r\n\r\n// GET PanDetails API\r\nexport const PanDetails = data => {\r\n  return post(`/growth-source/api/getPanDetails`, data).then(res => {\r\n    console.log(\"Response :: Get Pan Details ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// GET Gst Number\r\nexport const GstNumber = data => {\r\n  return post(`/growth-source/api/getGSTNumber`, data).then(res => {\r\n    console.log(\"Response :: Get GST Numbers ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// GST Address Details\r\nexport const Gstaddress = data => {\r\n  return post(`/growth-source/api/getGSTAddressDetails`, data).then(res => {\r\n    console.log(\"Response :: Get GST Address Details ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// Get All States\r\n// export const getAllState = data => {\r\n//   return post(`/growth-source/common/getAllStates`, data).then(res => {\r\n//     console.log(\"Response :: Get All states ::: \", res);\r\n//     return res;\r\n//   });\r\n// };\r\n\r\n// get All Cities\r\nexport const getAllState = () => {\r\n  return get(`/growth-source/common/getAllStates`).then(res => {\r\n    console.log(\"Response :: Get All states ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const getAllCities = data => {\r\n  return get(`/growth-source/common/getCity?state=${data}`).then(res => {\r\n    console.log(\"Response :: Get All City ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// add DSA API\r\nexport const AddDSA = data => {\r\n  return post(`/growth-source/dsa/addDsa`, data).then(res => {\r\n    console.log(\"Response :: Add Dsa Data ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// getCompanytypeList Api\r\nexport const getCompanytypeList = data => {\r\n  return post(\r\n    `/growth-source/common/getSubcategorylist?categoryid=${data}`\r\n  ).then(res => {\r\n    console.log(\"Response :: Get Company List ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n//Get all Dsa List for checker\r\nexport const getAllDSA = data => {\r\n  return post(`/growth-source/dsa/getdsalist?status=${data}`).then(res => {\r\n    console.log(\"Response :: Get DSA List ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n\r\n// Get DsaByUniqueId\r\nexport const getDsaByUniqueId = data => {\r\n  return post(`/growth-source/dsa/getDsaByUniqueId?dsacode=${data}`).then(\r\n    res => {\r\n      console.log(\"Response :: Get DSA BY UniqueId ::: \", res);\r\n      return res;\r\n    }\r\n  );\r\n};\r\n\r\n// Upload Document\r\nexport const uploadDoc = data => {\r\n  console.log(data);\r\n\r\n  // const fd = new FormData();\r\n\r\n  // fd.append(\"file1\", data.file1);\r\n  // fd.append(\"userDoc\", JSON.stringify(data.userDoc));\r\n\r\n  // console.log(fd.get(\"file1\"));\r\n  // console.log(fd.get(\"userDoc\"));\r\n\r\n  const formData = new FormData();\r\n  Object.keys(data).map(key => {\r\n    formData.append(\"formData\", data[key]);\r\n    formData[key] = data[key];\r\n  });\r\n  console.log(\"TCL: formData\", formData);\r\n  return post(\r\n    `/growth-source/dsa/uploadDoc?dsaDocs=${formData}\r\n    `,\r\n    formData\r\n    // \"multipart/form-data\"\r\n  ).then(res => {\r\n    console.log(\"RESPONSE :: Upload Document ::: \", res);\r\n    return res;\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport {\r\n  PanDetails,\r\n  GstNumber,\r\n  Gstaddress,\r\n  getAllState,\r\n  getAllCities,\r\n  AddDSA,\r\n  getCompanytypeList,\r\n  uploadDoc\r\n} from \"../../Utils/dsa\";\r\nimport { BranchList } from \"../../Utils/management\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\ntoast.configure();\r\n\r\nconst statusOption = [\r\n  { id: 1, value: \"Private Ltd Company\", label: \"Private Ltd Company\" },\r\n  { id: 2, value: \"Sole Proprietorship\", label: \"Sole Proprietorship\" },\r\n  {\r\n    id: 3,\r\n    value: \"Joint Hindu Family Bussiness\",\r\n    label: \"Joint Hindu Family Bussiness\"\r\n  },\r\n  { id: 4, value: \"Partnership\", label: \"Partnership\" },\r\n  {\r\n    id: 4,\r\n    value: \"Limited Liability Partnership(LLP)\",\r\n    label: \"Limited Liability Partnership(LLP)\"\r\n  }\r\n];\r\n\r\n// const CompanytypeOption = [\r\n//   { id: 1, value: \"Private Ltd Company\", label: \"Private Ltd Company\" },\r\n//   { id: 2, value: \"Sole Proprietorship\", label: \"Sole Proprietorship\" },\r\n//   {\r\n//     id: 3,\r\n//     value: \"Joint Hindu Family Business\",\r\n//     label: \"Joint Hindu Family Business\"\r\n//   },\r\n//   { id: 4, value: \"Partnership\", label: \"Partnership\" },\r\n//   {\r\n//     id: 5,\r\n//     value: \"Limited Liability Partnership(LLP)\",\r\n//     label: \"Limited Liability Partnership(LLP)\"\r\n//   }\r\n// ];\r\n\r\nconst CompanyNameOption = [\r\n  { id: 1, value: \"Company Name\", label: \"Company Name\" },\r\n  { id: 1, value: \"Individual Name\", label: \"Individual Name\" },\r\n  { id: 1, value: \"HUF\", label: \"HUF\" }\r\n];\r\n\r\nexport class DsaMakerForm extends Component {\r\n  state = {\r\n    show: false,\r\n    status: null,\r\n    company: null,\r\n    companyName: null,\r\n    gst: null,\r\n    panNumber: null,\r\n    stat: null,\r\n    city: null,\r\n    branch: null,\r\n    startDate: \"\",\r\n    dateOfBirth: \"\",\r\n    address: [],\r\n    addrs: \"\",\r\n    gstShow: false,\r\n    invalidPanNumber: false,\r\n    invalidmobileNo: false,\r\n    invalidifscCode: false,\r\n    invalidemailId: false,\r\n    name: \"\",\r\n    mobileNO: \"\",\r\n    emailId: \"\",\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    document: \"\",\r\n    bankAccountNumber: \"\",\r\n    ifscCode: \"\",\r\n    hsnCode: \"\",\r\n    DOB: \"\",\r\n    stateCode: \"\",\r\n    pan: \"\",\r\n    panStatus: null,\r\n    permanantAddress: \"\",\r\n    communicationAddress: \"\",\r\n    pincode: \"\",\r\n    GstDetails: [],\r\n    GSTAddress: [],\r\n    getState: [],\r\n    getCities: [],\r\n    branchListData: [],\r\n    CompanytypeOption: [],\r\n    errors: {\r\n      TypeOfCompanyError: null,\r\n      PanNumberError: null,\r\n      dateOfBirthError: null,\r\n      companyNameError: null,\r\n      gstNoError: null,\r\n      statError: null,\r\n      cityError: null,\r\n      branchError: null,\r\n      pincodeError: null,\r\n      contactNameError: null,\r\n      mobileNOError: null,\r\n      emailIdError: null,\r\n      permanantAddressError: null,\r\n      communicationAddressError: null,\r\n      accountNameError: null,\r\n      bankNameError: null,\r\n      bankAccountNumberError: null,\r\n      ifscCodeError: null,\r\n      hsnCodeError: null,\r\n      stateCodeError: null\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.handleShow();\r\n    this.handleStatus();\r\n    this.handleName();\r\n    this.handlestateName();\r\n    this.handleCity();\r\n    this.handleGST();\r\n    this.PanDetailData();\r\n    // this.GSTData();\r\n    this.GSTAddressDetails();\r\n    this.GetallStateData();\r\n    this.getAllBranchList();\r\n    // this.GetAllCitiesData();\r\n    this.GetCompanyListData();\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    // this.props.addUser();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleStatus = company => {\r\n    this.setState({ company });\r\n    console.log(\"Type of company\", company && company.id);\r\n  };\r\n\r\n  handleName = companyName => {\r\n    this.setState({ companyName });\r\n    console.log(companyName && companyName);\r\n  };\r\n\r\n  handlestateName = stat => {\r\n    this.setState({ stat }, () => this.GetAllCitiesData());\r\n    console.log(\"ghsdghhdg\", stat && stat);\r\n  };\r\n\r\n  handleCity = city => {\r\n    this.setState({ city });\r\n    console.log(\"jhsdhhadv\", city && city);\r\n  };\r\n\r\n  handleGST = gst => {\r\n    this.setState({ gst }, () => this.GSTAddressDetails());\r\n    console.log(\"gst........\", gst && gst.gstNo);\r\n  };\r\n  handleBranch = branch => {\r\n    this.setState({ branch });\r\n    console.log(branch && branch.branchcode);\r\n  };\r\n\r\n  // handleAddress = address => {\r\n  //   this.setState({ address });\r\n  //   console.log(\"address\", address && address);\r\n  // };\r\n\r\n  handlePan = e => {\r\n    this.setState(\r\n      {\r\n        panNumber: e.target.value.toUpperCase()\r\n      },\r\n      // () => this.PanDetailData()\r\n      () => this.GSTData()\r\n    );\r\n  };\r\n\r\n  // handleDOB = e => {\r\n  //   this.setState(\r\n  //     {\r\n  //       dateOfBirth: e.target.value\r\n  //     },\r\n  //\r\n  //   );\r\n  // };\r\n\r\n  handleifsc = e => {\r\n    this.setState({\r\n      ifscCode: e.target.value.toUpperCase()\r\n    });\r\n  };\r\n\r\n  handleDOB = date => {\r\n    this.setState(\r\n      {\r\n        DOB: date\r\n      },\r\n      () => this.handleMoment()\r\n    );\r\n  };\r\n\r\n  handleMoment = () => {\r\n    this.setState(\r\n      {\r\n        dateOfBirth: moment(this.state.DOB && this.state.DOB).format(\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      },\r\n      () => this.PanDetailData()\r\n    );\r\n  };\r\n\r\n  handleCheck = () => {\r\n    this.setState({\r\n      gstShow: true\r\n    });\r\n  };\r\n\r\n  PanDetailData = () => {\r\n    const { panNumber, dateOfBirth } = this.state;\r\n    // let panNumber = panNumber;\r\n    // let dateOfBirth = this.state.dateOfBirth;\r\n    console.log(\"ljskdf\", panNumber && panNumber);\r\n\r\n    console.log(\"......\", dateOfBirth && dateOfBirth);\r\n\r\n    let obj = { panNumber, dateOfBirth };\r\n    console.log(\">>>>>>>...\", JSON.stringify(obj));\r\n\r\n    PanDetails(obj).then(response => {\r\n      console.log(\">>>>>>>...\", JSON.stringify(obj));\r\n      if (response.data && response.data.error === \"false\") {\r\n        console.log(\"pan data details\", response.data && response.data);\r\n        this.setState({\r\n          pan:\r\n            response.data.data && response.data.data\r\n              ? response.data.data.panName\r\n              : [],\r\n\r\n          panStatus:\r\n            response.data.data && response.data.data\r\n              ? response.data.data.panStatus\r\n              : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  onDrop = picture => {\r\n    this.setState({\r\n      document: picture\r\n    });\r\n  };\r\n\r\n  GSTData = () => {\r\n    const { panNumber } = this.state;\r\n    console.log(\"pannumber\", panNumber && panNumber);\r\n\r\n    let objs = { panNumber };\r\n    GstNumber(objs).then(response => {\r\n      console.log(\"gst\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          GstDetails:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GetCompanyListData = () => {\r\n    let categoryid = 2;\r\n    getCompanytypeList(categoryid).then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        console.log(\r\n          \"Company Type Id\",\r\n          response.data.data && response.data.data.id\r\n        );\r\n        this.setState({\r\n          CompanytypeOption:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GSTAddressDetails = () => {\r\n    const { gst } = this.state;\r\n    let ojbts = { gstNumber: gst && gst.gstNo };\r\n    Gstaddress(ojbts).then(response => {\r\n      console.log(\"GST Address Details\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState(\r\n          {\r\n            GSTAddress:\r\n              response.data && response.data.data ? response.data.data : []\r\n          },\r\n          () => this.getPermanentAdd()\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  getPermanentAdd = () => {\r\n    const { GSTAddress } = this.state;\r\n    GSTAddress.forEach(addr => {\r\n      console.log(\"AAAAAA...\", addr && addr);\r\n\r\n      this.setState({\r\n        addrs: addr.perAddress && addr.perAddress\r\n      });\r\n    });\r\n  };\r\n\r\n  GetallStateData = () => {\r\n    getAllState().then(response => {\r\n      console.log(\"GST All State\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          getState:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GetAllCitiesData = () => {\r\n    const { stat } = this.state;\r\n    console.log(\"value.....\", stat && stat.name);\r\n\r\n    // console.log(\"getallcitiesdata------------------>\", stat);\r\n\r\n    getAllCities(stat && stat.stateName).then(response => {\r\n      console.log(\"GST All City\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          getCities:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getAllBranchList = () => {\r\n    BranchList().then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          branchListData:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  verifyGst = () => {\r\n    const { panStatus } = this.state;\r\n    console.log(\"panstatus\", panStatus && panStatus);\r\n    if (panStatus && panStatus === \"Active\") {\r\n      console.log(\"panstatus\", panStatus && panStatus);\r\n      toast.success(\"PAN Is Valid\", {\r\n        type: toast.TYPE.SUCCESS,\r\n        autoClose: 4000\r\n      });\r\n    }\r\n    if (panStatus && panStatus === \"Invalid\") {\r\n      toast.error(\"PAN Is Invalid. Please Enter Valid PAN Number\", {\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 4000\r\n      });\r\n      this.setState({\r\n        panNumber: \"\",\r\n        company: \"\",\r\n        DOB: \"\",\r\n        pan: \"\"\r\n      });\r\n    }\r\n  };\r\n\r\n  restrictAlphabets = e => {\r\n    const regx = \"^[0-9]*$\";\r\n    if (e.key.match(regx)) {\r\n      return true;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  onValidate = name => {\r\n    const { DOB, branch, gst, errors, company, stat, city } = this.state;\r\n    if (name === \"DOB\") {\r\n      if (DOB === \"\" || DOB === null || DOB === undefined) {\r\n        this.setState({ errors: { ...errors, dateOfBirthError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, dateOfBirthError: false } });\r\n      }\r\n    }\r\n    if (name === \"branch\") {\r\n      if (branch === \"\" || branch === null || branch === undefined) {\r\n        this.setState({ errors: { ...errors, branchError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, branchError: false } });\r\n      }\r\n    }\r\n\r\n    if (name === \"company\") {\r\n      if (company === \"\" || company === null || company === undefined) {\r\n        this.setState({ errors: { ...errors, TypeOfCompanyError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, TypeOfCompanyError: false } });\r\n      }\r\n    }\r\n    if (name === \"gst\") {\r\n      if (gst === \"\" || gst === null || gst === undefined) {\r\n        this.setState({ errors: { ...errors, gstNoError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, gstNoError: false } });\r\n      }\r\n    }\r\n\r\n    if (name === \"stat\") {\r\n      if (stat === \"\" || stat === null || stat === undefined) {\r\n        this.setState({ errors: { ...errors, statError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, statError: false } });\r\n      }\r\n    }\r\n\r\n    if (name === \"city\") {\r\n      if (city === \"\" || city === null || city === undefined) {\r\n        this.setState({ errors: { ...errors, cityError: true } });\r\n      } else {\r\n        this.setState({ errors: { ...errors, cityError: false } });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleValidate = e => {\r\n    const { errors } = this.state;\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    if (value === \"\" || value === null || value === undefined) {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: true } });\r\n    } else {\r\n      this.setState({ errors: { ...errors, [name + \"Error\"]: false } });\r\n    }\r\n    if (name === \"emailId\") {\r\n      let emailRegx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (value && !value.match(emailRegx)) {\r\n        this.setState({\r\n          invalidemailId: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidemailId: false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"panNumber\") {\r\n      if (value && value.length < 10) {\r\n        this.setState({\r\n          invalidPanNumber: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidPanNumber: false\r\n        });\r\n      }\r\n    }\r\n\r\n    if (name === \"panNumber\") {\r\n      let verifiedPan =\r\n        \"[A-Z]{3}([CHFATBLJGP])(?:(?<=P)\" + \"|(?<!P)\" + \")[0-9]{4}[A-Z]\";\r\n      if (value && !value.match(verifiedPan)) {\r\n        this.setState({\r\n          invalidPanNumber: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidPanNumber: false\r\n        });\r\n      }\r\n    }\r\n    if (name === \"mobileNO\") {\r\n      if (value && value.length < 10) {\r\n        this.setState({\r\n          invalidmobileNo: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidmobileNo: false\r\n        });\r\n      }\r\n    }\r\n    //  ^[A-Za-z]{4}0[A-Z0-9a-z]{6}$\r\n    if (name === \"ifscCode\") {\r\n      let verifyIfsc = \"^[A-Za-z]{4}0[A-Z0-9a-z]{6}$\";\r\n      if (value && !value.match(verifyIfsc)) {\r\n        this.setState({\r\n          invalidifscCode: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          invalidifscCode: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const {\r\n      company,\r\n      name,\r\n      panNumber,\r\n      gst,\r\n      errors,\r\n      stat,\r\n      city,\r\n      addrs,\r\n      address,\r\n      mobileNO,\r\n      emailId,\r\n      bankName,\r\n      accountName,\r\n      bankAccountNumber,\r\n      ifsccode,\r\n      hsncode,\r\n      stateCode,\r\n      invalidPanNumber,\r\n      branch,\r\n      DOB,\r\n      dateOfBirth,\r\n      pincode,\r\n      // permanantAddress,\r\n      communicationAddress\r\n    } = this.state;\r\n\r\n    let isAdd = true;\r\n    for (var val in errors) {\r\n      if (errors[val] === null || errors[val]) {\r\n        errors[val] = true;\r\n        isAdd = false;\r\n      }\r\n    }\r\n\r\n    let gstStatus = \"true\";\r\n    let phoneNumber = mobileNO;\r\n    let companyType = company && company.id;\r\n    let companyname = this.state.pan;\r\n    let stateId = stat && stat.state_id;\r\n    let cityId = city && city.city_id;\r\n    let bankAccountName = accountName;\r\n    let bankAccountno = bankAccountNumber;\r\n    let statecode = stateCode;\r\n    let companypan = panNumber;\r\n    let gstNumber = gst && gst.gstNo;\r\n    let contactname = name;\r\n    let permanantAddress = addrs;\r\n    // let dateOfBirth = dateOfBirth;\r\n    let status = \"UNVERIFIED\";\r\n    let branchcode = branch && branch.branchcode;\r\n    // let dateOfBirth = moment(DOB).format(\"YYYY-MM-DD\");\r\n    console.log(\"dateOfBirth\", dateOfBirth && dateOfBirth);\r\n    let makerId = null;\r\n    let remarkFlag = false;\r\n    let applicationNumber = null;\r\n    let gstNumberList = null;\r\n\r\n    // let permanantAddress = \"Plot No 14, , Khadan Layout, Meghraj Nagar MIDC T Point Wadi, Nagpur, Nagpur, Maharashtra, 440023\";\r\n\r\n    // let dateOfJoining = dateOfBirth ? dateOfBirth.format(\"x\") : null;\r\n    let dsaBranchmapping = [\r\n      {\r\n        employeeId: \"\",\r\n        branchcode\r\n      }\r\n    ];\r\n    let dsaData = {\r\n      gstStatus,\r\n      companyType,\r\n      companyname,\r\n      stateId,\r\n      cityId,\r\n      phoneNumber,\r\n      bankName,\r\n      bankAccountName,\r\n      bankAccountno,\r\n      ifsccode,\r\n      hsncode,\r\n      statecode,\r\n      dsaBranchmapping,\r\n      companypan,\r\n      gstNumber,\r\n      pincode,\r\n      permanantAddress,\r\n      communicationAddress,\r\n      dateOfBirth,\r\n      contactname,\r\n      emailId,\r\n      status,\r\n      makerId,\r\n      remarkFlag,\r\n      applicationNumber,\r\n      gstNumberList\r\n    };\r\n    console.log();\r\n\r\n    console.log(\"hgsdhgdf\", JSON.stringify(dsaData));\r\n    if (isAdd && isAdd) {\r\n      AddDSA(dsaData).then(response => {\r\n        if (response.data && response.data.error === \"false\") {\r\n          toast.success(\"DSA Added Successfully\", {\r\n            type: toast.TYPE.SUCCESS,\r\n            autoClose: 2000\r\n          });\r\n          console.log(response.data && response.data);\r\n        }\r\n        if (response.data && response.data.error === \"true\") {\r\n          toast.error(response.data.message, {\r\n            type: toast.TYPE.ERROR,\r\n            autoClose: 2000\r\n          });\r\n        }\r\n\r\n        this.handleClose();\r\n      });\r\n    }\r\n    let documentName = document[0] ? document[0] : null;\r\n    let userDoc = [\r\n      {\r\n        documentName,\r\n        description: \"Profile Image\",\r\n        uniqueId: \"DSA0001\"\r\n      }\r\n    ];\r\n\r\n    uploadDoc(userDoc).then(res => {\r\n      console.log(\"handleSubmit -> response\", res);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      status,\r\n      errors,\r\n      company,\r\n      companyName,\r\n      panNumber,\r\n      pan,\r\n      dateOfBirth,\r\n      show,\r\n      gst,\r\n      GSTOption,\r\n      stat,\r\n      stateOption,\r\n      getState,\r\n      GSTAddress,\r\n      city,\r\n      cityOption,\r\n      branch,\r\n      branchOption,\r\n      address,\r\n      DOB,\r\n      name,\r\n      mobileNO,\r\n      bankName,\r\n      accountName,\r\n      bankAccountNumber,\r\n      ifscCode,\r\n      hsnCode,\r\n      stateCode,\r\n      getCities,\r\n      branchListData,\r\n      emailId,\r\n      GstDetails,\r\n      addrs,\r\n      pincode,\r\n      invalidPanNumber,\r\n      CompanytypeOption,\r\n      permanantAddress,\r\n      communicationAddress,\r\n      invalidmobileNo,\r\n      gstShow,\r\n      invalidemailId,\r\n      invalidifscCode\r\n    } = this.state;\r\n    console.log(\"dob\", DOB && DOB);\r\n    console.log(\"geyggd\", dateOfBirth && dateOfBirth);\r\n    console.log(\"jhjdh\", pan && pan);\r\n\r\n    console.log(\r\n      \"GSTAddress....\",\r\n      GSTAddress.forEach(addr => {\r\n        console.log(\"address.....\", addr && addr);\r\n      })\r\n    );\r\n\r\n    let Toggle = {};\r\n\r\n    // console.log(stat && stat.name);\r\n    // console.log(\"pan\", pan && pan);\r\n    // console.log(\"gstShow\", gstShow, gstShow);\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <Modal\r\n          className=\"add-user\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={show && show}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>DSA FORM</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\" style={{ background: \"#f8f9fa\" }}>\r\n            <div className=\"row\">\r\n              <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">\r\n                    Company Details\r\n                  </h5>\r\n                  <div className=\"col-md-4\">\r\n                    <label>Type Of Company</label>\r\n                    <Select\r\n                      value={company}\r\n                      onChange={this.handleStatus}\r\n                      onBlur={() => this.onValidate(\"company\")}\r\n                      name=\"company\"\r\n                      options={CompanytypeOption}\r\n                      placeholder=\"Type Of Company\"\r\n                      valueKey=\"id\"\r\n                      labelKey=\"subcat_type\"\r\n                      getOptionLabel={option => option[\"subcat_type\"]}\r\n                      getOptionValue={option => option[\"id\"]}\r\n                    />\r\n                    {errors.TypeOfCompanyError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please Select Type Of Company\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Company PAN Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"10\"\r\n                      className=\"form-input\"\r\n                      name=\"panNumber\"\r\n                      value={panNumber}\r\n                      onChange={this.handlePan}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Company PAN Number\"\r\n                    />\r\n                    {errors.PanNumberError && (\r\n                      <span className=\"errorMsg\">Please Select PAN Number</span>\r\n                    )}\r\n                    {invalidPanNumber && (\r\n                      <span className=\"errorMsg\">Please enter valid PAN</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>Date Of Birth / Date Of Incorportion</label>\r\n                    <br />\r\n                    <DatePicker\r\n                      className=\"form-input\"\r\n                      selected={DOB}\r\n                      onBlur={() => this.onValidate(\"DOB\")}\r\n                      onChange={this.handleDOB}\r\n                      dateFormat=\"yyyy-MM-dd\"\r\n                      placeholderText=\"YYYY-MM-DD\"\r\n                      showYearDropdown\r\n                      showMonthDropdown\r\n                    />\r\n                    {/* <input\r\n                      type=\"date\"\r\n                      className=\"form-input\"\r\n                      name=\"dateOfBirth\"\r\n                      value={dateOfBirth}\r\n                      onChange={this.handleDOB}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Date Of Birth / Date Of Inacorportion\"\r\n                    /> */}\r\n                    {errors.dateOfBirthError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please select Date of Birth\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Company Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"companyName\"\r\n                      value={pan}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Company Name\"\r\n                      disabled\r\n                    />\r\n                    {errors.companyNameError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter Company Number\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* <div className=\"custom-control custom-checkbox col-md-12 text-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"defaultUnchecked\"\r\n                    />\r\n                    <label className=\"custom-control-label\" for=\"defaultUnchecked\">\r\n                      <span></span>Do You Have The GST?\r\n                    </label>\r\n                  </div> */}\r\n\r\n                  <div className=\"custom-control custom-checkbox col-md-4 mt-4\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"defaultUnchecked\"\r\n                      onClick={this.handleCheck}\r\n                    />\r\n\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      for=\"defaultUnchecked\"\r\n                    >\r\n                      <span></span>Do You Have GST?\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"col-md-4\"\r\n                    style={\r\n                      gstShow == false\r\n                        ? { display: \"none\" }\r\n                        : { display: \"block\" }\r\n                    }\r\n                  >\r\n                    <label>GST</label>\r\n                    <Select\r\n                      value={gst}\r\n                      onChange={this.handleGST}\r\n                      onBlur={() => this.onValidate(\"gst\")}\r\n                      options={GstDetails}\r\n                      name=\"gst\"\r\n                      placeholder=\"GST\"\r\n                      labelKey=\"gstNo\"\r\n                      valueKey=\"id\"\r\n                      getOptionLabel={option => option[\"gstNo\"]}\r\n                      getOptionValue={option => option[\"id\"]}\r\n                    />\r\n                    {errors.gstNoError && (\r\n                      <span className=\"errorMsg\">Please select GST Number</span>\r\n                    )}\r\n                  </div>\r\n                  {/* <br></br> */}\r\n                  <div className=\"col-md-12 text-center mt-2\">\r\n                    <Button className=\"btn-success\" onClick={this.verifyGst}>\r\n                      Verify\r\n                    </Button>\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-md-4\">\r\n                    <label>State</label>\r\n                    <Select\r\n                      value={state}\r\n                      onChange={this.handlestate}\r\n                    \r\n                      options={stateOption}\r\n                      name=\"state\"\r\n                      placeholder=\"State\"\r\n                    />\r\n                    \r\n                  </div> */}\r\n                </div>\r\n              </section>\r\n\r\n              <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">\r\n                    Address Details\r\n                  </h5>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>State</label>\r\n                    <Select\r\n                      value={stat}\r\n                      onChange={this.handlestateName}\r\n                      onBlur={() => this.onValidate(\"stat\")}\r\n                      options={getState}\r\n                      name=\"stat\"\r\n                      placeholder=\"State\"\r\n                      valueKey=\"stateId\"\r\n                      labelKey=\"stateName\"\r\n                      getOptionLabel={option => option[\"stateName\"]}\r\n                      getOptionValue={option => option[\"stateId\"]}\r\n                    />\r\n\r\n                    {errors.statError && (\r\n                      <span className=\"errorMsg\">Please select State</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\" col-md-4\">\r\n                    <label>City</label>\r\n                    <Select\r\n                      value={city}\r\n                      onChange={this.handleCity}\r\n                      onBlur={() => this.onValidate(\"city\")}\r\n                      options={getCities}\r\n                      name=\"city\"\r\n                      placeholder=\"City\"\r\n                      valueKey=\"cityId\"\r\n                      labelKey=\"cityName\"\r\n                      getOptionLabel={option => option[\"cityName\"]}\r\n                      getOptionValue={option => option[\"cityId\"]}\r\n                    />\r\n                    {errors.cityError && (\r\n                      <span className=\"errorMsg\">Please select City</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>Branch</label>\r\n                    <Select\r\n                      value={branch}\r\n                      onChange={this.handleBranch}\r\n                      onBlur={() => this.onValidate(\"branch\")}\r\n                      isMulti\r\n                      options={branchListData}\r\n                      name=\"branch\"\r\n                      placeholder=\"Branch\"\r\n                      valueKey=\"branchcode\"\r\n                      labelKey=\"branchname\"\r\n                      getOptionLabel={option => option[\"branchname\"]}\r\n                      getOptionValue={option => option[\"branchcode\"]}\r\n                    />\r\n                    {errors.branchError && (\r\n                      <span className=\"errorMsg\">Please select Branch</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-4\">\r\n                    <label>Pin Code</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"10\"\r\n                      className=\"form-input\"\r\n                      name=\"pincode\"\r\n                      value={pincode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      onKeyPress={this.restrictAlphabets}\r\n                      placeholder=\"Pin Code\"\r\n                    />\r\n                    {errors.pincodeError && (\r\n                      <span className=\"errorMsg\">Please Enter Pincode</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-4\">\r\n                    <label>Contact Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"50\"\r\n                      className=\"form-input\"\r\n                      name=\"name\"\r\n                      value={name}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Contact Name\"\r\n                    />\r\n                    {errors.contactNameError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter Contact Name\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\" col-md-4 mt-4\">\r\n                    <label>Mobile Number</label>\r\n                    {/* <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      maxLength=\"10\"\r\n                      value={mobileNO}\r\n                      name=\"mobileNo\"\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Mobile Number\"\r\n                    /> */}\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"10\"\r\n                      className=\"form-input\"\r\n                      name=\"mobileNO\"\r\n                      value={mobileNO}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      onKeyPress={this.restrictAlphabets}\r\n                      placeholder=\"Enter Mobile Number\"\r\n                    />\r\n                    {errors.mobileNOError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter Mobile Number\r\n                      </span>\r\n                    )}\r\n                    {invalidmobileNo && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter valid Mobile Number\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* <div className=\"form-group col-md-4 mt-4\">\r\n                    <label>Email Id</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"50\"\r\n                      className=\"form-input\"\r\n                      name=\"emailId\"\r\n                      value={emailId}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Email Id\"\r\n                    />\r\n                    {errors.emailIdError && (\r\n                      <span className=\"errorMsg\">Please Enter Email ID</span>\r\n                    )}\r\n                    {invalidemailId && (\r\n                      <span className=\"errorMsg\">\r\n                        Please Enter Valid Email ID\r\n                      </span>\r\n                    )}\r\n                  </div> */}\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label> Email ID</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"emailId\"\r\n                      value={emailId}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Email ID\"\r\n                    />\r\n                    {errors.emailIdError && (\r\n                      <span className=\"errorMsg\">Please enter email ID</span>\r\n                    )}\r\n                    {invalidemailId && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter valid email ID\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-3\">\r\n                    <label>Registered Address</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"permanantAddress\"\r\n                      value={addrs}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Registered Address\"\r\n                      disabled\r\n                    />\r\n\r\n                    {errors.permanantAddressError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter Registered Address\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4 mt-3\">\r\n                    <label>Communication Address</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"300\"\r\n                      className=\"form-input\"\r\n                      name=\"communicationAddress\"\r\n                      value={communicationAddress}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Communication Address\"\r\n                    />\r\n                    {errors.communicationAddressError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter Communication Address\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </section>\r\n\r\n              <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">Bank Details</h5>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Bank Account Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"50\"\r\n                      className=\"form-input\"\r\n                      name=\"accountName\"\r\n                      value={accountName}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Account Name\"\r\n                    />\r\n                    {errors.accountNameError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter Account Name\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Bank Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"70\"\r\n                      className=\"form-input\"\r\n                      name=\"bankName\"\r\n                      value={bankName}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Bank Name\"\r\n                    />\r\n                    {errors.bankNameError && (\r\n                      <span className=\"errorMsg\">Please enter Bank Number</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label> Account Number</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"30\"\r\n                      className=\"form-input\"\r\n                      name=\"bankAccountNumber\"\r\n                      value={bankAccountNumber}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Account Number\"\r\n                    />\r\n                    {errors.bankAccountNumberError && (\r\n                      <span className=\"errorMsg\">\r\n                        Please Enter Account Number\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>IFSC Code</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"11\"\r\n                      className=\"form-input\"\r\n                      name=\"ifscCode\"\r\n                      value={ifscCode}\r\n                      onChange={this.handleifsc}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter IFSC Code\"\r\n                    />\r\n                    {errors.ifscCodeError && (\r\n                      <span className=\"errorMsg\">Please enter IFSC Code</span>\r\n                    )}\r\n                    {invalidifscCode && (\r\n                      <span className=\"errorMsg\">\r\n                        Please enter valid IFSC Code\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>HSN Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"20\"\r\n                      className=\"form-input\"\r\n                      name=\"hsnCode\"\r\n                      value={hsnCode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      onKeyPress={this.restrictAlphabets}\r\n                      placeholder=\"Enter HSN Code\"\r\n                      disabled\r\n                    />\r\n                    {errors.hsnCodeError && (\r\n                      <span className=\"errorMsg\">Please enter HSN Code</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>State Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      pattern=\"\\d*\"\r\n                      maxLength=\"20\"\r\n                      className=\"form-input\"\r\n                      name=\"stateCode\"\r\n                      value={stateCode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter State Code\"\r\n                      disabled\r\n                    />\r\n                    {errors.stateCodeError && (\r\n                      <span className=\"errorMsg\">Please enter State Code</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>Upload PAN</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload PAN\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>Upload Aadhaar</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Aadhaar\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>Upload Shopact</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Shopact\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4 mt-4\">\r\n                    <label>Upload Cancelled Cheque</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Cancelled Cheque\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4 mt-4\">\r\n                    <label>Upload Agreement </label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Agreement\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-md-6\">\r\n                <label>Status</label>\r\n                <Select\r\n                  value={status}\r\n                  onChange={this.handleStatus}\r\n                  name=\"status\"\r\n                  options={statusOption}\r\n                  placeholder=\"Status\"\r\n                />\r\n              </div> */}\r\n\r\n                  {/* <div className=\"col-md-4\">\r\n                        <label>Profile Picture</label>\r\n                        <ImageUploader\r\n                            withIcon={true}\r\n                            withPreview={true}\r\n                            withLabel={true}\r\n                            accept=\"image/*\"\r\n                            buttonText='Upload Profile Picture'\r\n                            onChange={this.onDrop}\r\n                            fileTypeError=\"is not supported file extension\"\r\n                            imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\r\n                            maxFileSize={5242880}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <label>Gender</label>\r\n                        <div className=\"mt-2\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    className=\"mr-3\"\r\n                                    name=\"gender\"\r\n                                    value=\"Male\"\r\n                                    checked={gender === \"Male\"}\r\n                                    onBlur={this.handleValidate}\r\n                                    onChange={this.onChanged} />\r\n                                Male </label>\r\n                            <label className=\"ml-2\">\r\n                                <input\r\n                                    className=\"ml-2 mr-3\"\r\n                                    type=\"radio\"\r\n                                    name=\"gender\"\r\n                                    value=\"Female\"\r\n                                    onBlur={this.handleValidate}\r\n                                    checked={gender === \"Female\"}\r\n                                    onChange={this.onChanged} />\r\n                                Female </label>\r\n                        </div>\r\n                        {\r\n                            errors.genderError &&\r\n                            <span className=\"errorMsg\">Please select gender</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Blood Group</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"bloodGroup\"\r\n                            value={bloodGroup}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Blood Group\" />\r\n                        {\r\n                            errors.bloodGroupError &&\r\n                            <span className=\"errorMsg\">Please enter blood group</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Official Email ID</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"officialEmail\"\r\n                            value={officialEmail}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Official Email\" />\r\n                        {\r\n                            errors.officialEmailError &&\r\n                            <span className=\"errorMsg\">Please enter email</span>\r\n                        }\r\n                        {\r\n                            invalidofficialEmail &&\r\n                            <span className=\"errorMsg\">Please enter valid email</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Personal Email ID</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"personalEmail\"\r\n                            value={personalEmail}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Personal Email\" />\r\n                        {\r\n                            errors.personalEmailError &&\r\n                            <span className=\"errorMsg\">Please enter email</span>\r\n                        }\r\n                        {\r\n                            invalidpersonalEmail &&\r\n                            <span className=\"errorMsg\">Please enter valid email</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Primary Mobile No.</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"\\d*\"\r\n                            maxLength=\"10\"\r\n                            className=\"form-input\"\r\n                            name=\"primaryMobileNo\"\r\n                            value={primaryMobileNo}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            onKeyPress={this.restrictAlphabets}\r\n                            placeholder=\"Enter primary mobile number\" />\r\n                        {\r\n                            errors.primaryMobileNoError &&\r\n                            <span className=\"errorMsg\">Please enter mobile number</span>\r\n                        }\r\n                        {\r\n                            invalidprimaryMobileNo &&\r\n                            <span className=\"errorMsg\">Please enter valid mobile number</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Secondary Mobile No.</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"\\d*\"\r\n                            maxLength=\"10\"\r\n                            className=\"form-input\"\r\n                            name=\"secondaryMobileNo\"\r\n                            value={secondaryMobileNo}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            onKeyPress={this.restrictAlphabets}\r\n                            placeholder=\"Enter secondary mobile number\" />\r\n                        {\r\n                            errors.secondaryMobileNoError &&\r\n                            <span className=\"errorMsg\">Please enter mobile number</span>\r\n                        }\r\n                        {\r\n                            invalidsecondaryMobileNo &&\r\n                            <span className=\"errorMsg\">Please enter valid mobile number</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Aadhar Card No.</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"\\d*\"\r\n                            maxLength=\"12\"\r\n                            className=\"form-input\"\r\n                            name=\"aadharNo\"\r\n                            value={aadharNo}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            onKeyPress={this.restrictAlphabets}\r\n                            placeholder=\"Enter aadhar number\" />\r\n                        {\r\n                            errors.aadharNoError &&\r\n                            <span className=\"errorMsg\">Please enter aadhar number</span>\r\n                        }\r\n                        {\r\n                            invalidaadharNo &&\r\n                            <span className=\"errorMsg\">Please enter valid aadhar number</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Bank Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"bankName\"\r\n                            value={bankName}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Bank Name\" />\r\n                        {\r\n                            errors.bankNameError &&\r\n                            <span className=\"errorMsg\">Please enter bank name</span>\r\n                        }\r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-4\">\r\n                        <label>Date Of Joining</label><br />\r\n                        <DatePicker\r\n                            className=\"form-input\"\r\n                            selected={dateOfBirth}\r\n                            onBlur={() => this.onValidate('dateOfBirth')}\r\n                            onChange={this.handledateOfBirthChange}\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            placeholderText=\"YYYY-MM-DD\"\r\n                            showYearDropdown\r\n                            showMonthDropdown\r\n                        />\r\n                        {\r\n                            errors.dateOfBirthError &&\r\n                            <span className=\"errorMsg\">Please select date</span>\r\n                        }\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-4\">\r\n                        <label>Status</label>\r\n                        <Select\r\n                            value={status}\r\n                            onChange={this.handleStatus}\r\n                            name = \"status\"\r\n                           \r\n                            options={statusOption}\r\n                            \r\n                            placeholder=\"Status\"\r\n                        /> \r\n                    </div> */}\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button className=\"btn-success\" onClick={this.handleSubmit}>\r\n              {this.props.editObj ? \"Update\" : \"Create\"}\r\n            </Button>\r\n            {/* <Button className=\"btn-success\" onClick={this.GetAllCitiesData}>\r\n              {this.props.editObj ? \"Update\" : \"Create\"}\r\n            </Button> */}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DsaMakerForm;\r\n","import React, { Component } from \"react\";\r\nimport LeftMenu from \"../../Components/LeftMenu\";\r\nimport Header from \"../../Components/Header\";\r\nimport DsaMakerForm from \"../DSA/DsaMakerForm\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nexport class DsaMaker extends Component {\r\n  state = {\r\n    search: \"\",\r\n    dsaData: \"\",\r\n    showModal: false\r\n  };\r\n\r\n  //   handleChange = e => {\r\n  //     this.setState({\r\n  //       [e.target.name]: e.target.value\r\n  //     });\r\n  //   };\r\n\r\n  addDsa = () => {\r\n    this.setState({\r\n      showModal: !this.state.showModal\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { search, dsaData } = this.state;\r\n    const columns = [\r\n      {\r\n        Header: \"Company Name\",\r\n        Cell: ({ original }) => {\r\n          return original.companyName;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Type Of Company\",\r\n        Cell: ({ original }) => {\r\n          return original.TypeOfCompany;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Branch\",\r\n        Cell: ({ original }) => {\r\n          return original.branch;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Email Id\",\r\n        Cell: ({ original }) => {\r\n          return original.emailId;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Mobile Number\",\r\n        Cell: ({ original }) => {\r\n          return original.mobileNo;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        Cell: ({ original }) => {\r\n          return original.Status;\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"dash_grid\">\r\n        <LeftMenu />\r\n        <main className=\"bg-white\">\r\n          <Header {...this.props} />\r\n          <section className=\"container-fluid\">\r\n            <h5 className=\"text-center mt-5 mx-auto user-box\">DSA Maker</h5>\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              <div className=\"form-group m-0 search-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"search\"\r\n                  value={search}\r\n                  //   onChange={this.handleChange}\r\n                  // onBlur={this.handleValidate}\r\n                  placeholder=\"Search...\"\r\n                />\r\n              </div>\r\n              <button onClick={this.addDsa} className=\"add-btn ml-auto\">\r\n                {\" \"}\r\n                Add DSA{\" \"}\r\n              </button>\r\n              {this.state.showModal && <DsaMakerForm addDsa={this.addDsa} />}\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <ReactTable columns={columns} defaultPageSize={10} />\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DsaMaker;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport {\r\n  PanDetails,\r\n  GstNumber,\r\n  Gstaddress,\r\n  getAllState,\r\n  getAllCities,\r\n  AddDSA,\r\n  getCompanytypeList,\r\n  getDsaByUniqueId\r\n} from \"../../Utils/dsa\";\r\nimport { BranchList } from \"../../Utils/management\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Select from \"react-select\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\ntoast.configure();\r\n\r\nconst statusOption = [\r\n  { value: \"UNVERIFIED\", label: \"UNVERIFIED\" },\r\n  { value: \"VERIFIED\", label: \"VERIFIED\" },\r\n  {\r\n    id: 3,\r\n    value: \"ON HOLD\",\r\n    label: \"ON HOLD\"\r\n  }\r\n];\r\n\r\n// const CompanytypeOption = [\r\n//   { id: 1, value: \"Private Ltd Company\", label: \"Private Ltd Company\" },\r\n//   { id: 2, value: \"Sole Proprietorship\", label: \"Sole Proprietorship\" },\r\n//   {\r\n//     id: 3,\r\n//     value: \"Joint Hindu Family Business\",\r\n//     label: \"Joint Hindu Family Business\"\r\n//   },\r\n//   { id: 4, value: \"Partnership\", label: \"Partnership\" },\r\n//   {\r\n//     id: 5,\r\n//     value: \"Limited Liability Partnership(LLP)\",\r\n//     label: \"Limited Liability Partnership(LLP)\"\r\n//   }\r\n// ];\r\n\r\nconst companynameOption = [\r\n  { id: 1, value: \"Company Name\", label: \"Company Name\" },\r\n  { id: 1, value: \"Individual Name\", label: \"Individual Name\" },\r\n  { id: 1, value: \"HUF\", label: \"HUF\" }\r\n];\r\n\r\nexport class DsaMakerForm extends Component {\r\n  state = {\r\n    show: false,\r\n    status: null,\r\n    company: null,\r\n    companyname: null,\r\n    gst: null,\r\n    companypan: null,\r\n    stat: null,\r\n    city: \"\",\r\n    branch: null,\r\n    startDate: \"\",\r\n    DOJ: \"\",\r\n    address: [],\r\n    DSAData: [],\r\n    contactname: \"\",\r\n    remark: \"\",\r\n    phoneNumber: \"\",\r\n    emailId: \"\",\r\n    bankName: \"\",\r\n    bankAccountName: \"\",\r\n    bankAccountno: \"\",\r\n    ifsccode: \"\",\r\n    hsncode: \"\",\r\n    statecode: \"\",\r\n    pan: \"\",\r\n    permanantAddress: \"\",\r\n    communicationAddress: \"\",\r\n    DSAData: [],\r\n    pincode: \"\",\r\n    GstDetails: [],\r\n    GSTAddress: [],\r\n    getState: [],\r\n    getCities: [],\r\n    branchListData: [],\r\n    CompanytypeOption: []\r\n  };\r\n  componentDidMount() {\r\n    this.handleShow();\r\n    this.handleStatus();\r\n    this.handleName();\r\n    this.handlestateName();\r\n    this.handleCity();\r\n    this.handleGST();\r\n\r\n    this.PanDetailData();\r\n    this.GSTData();\r\n    // this.GSTAddressDetails();\r\n    this.GetallStateData();\r\n    this.getAllBranchList();\r\n    // this.GetAllCitiesData();\r\n\r\n    this.GetCompanyListData();\r\n    // this.Companyvalue();\r\n    if (this.props.verifyObj) {\r\n      this.getDsalistByDSacode();\r\n    }\r\n\r\n    console.log(\"rahul\", this.props.verifyObj);\r\n  }\r\n\r\n  handleShow = () => {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    // this.props.addUser();\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleStatus = company => {\r\n    this.setState({ company });\r\n    console.log(\"Type of company\", company && company);\r\n  };\r\n\r\n  handleName = companyname => {\r\n    this.setState({ companyname });\r\n    console.log(companyname && companyname);\r\n  };\r\n\r\n  handlestateName = stat => {\r\n    this.setState({ stat }, () => this.GetAllCitiesData());\r\n    console.log(\"ghsdghhdg\", stat && stat.state_id);\r\n  };\r\n\r\n  handleCity = city => {\r\n    this.setState({ city });\r\n    console.log(\"jhsdhhadv\", city && city.city_id);\r\n  };\r\n\r\n  handleGST = gst => {\r\n    this.setState({ gst }, () => this.GSTAddressDetails());\r\n    console.log(\"gst........\", gst && gst.gstNo);\r\n  };\r\n  handleBranch = branch => {\r\n    this.setState({ branch });\r\n    console.log(branch && branch.branchcode);\r\n  };\r\n\r\n  handleRemark = status => {\r\n    this.setState({ status });\r\n  };\r\n\r\n  // handleAddress = address => {\r\n  //   this.setState({ address });\r\n  //   console.log(\"address\", address && address);\r\n  // };\r\n\r\n  handlePan = e => {\r\n    this.setState(\r\n      {\r\n        companypan: e.target.value\r\n      }\r\n      // () => this.PanDetailData()\r\n    );\r\n  };\r\n\r\n  getDsalistByDSacode = () => {\r\n    getDsaByUniqueId(this.props.verifyObj && this.props.verifyObj).then(\r\n      response => {\r\n        let Data = response.data.data && response.data.data;\r\n        this.setState(Data);\r\n        // this.setState({\r\n        //   DSAData: Data\r\n        // });\r\n        console.log(\"hygsdygfy>>>>>\", Data);\r\n      }\r\n    );\r\n    console.log(\"ghsqgdjhgs.....\", this.props.verifyObj);\r\n  };\r\n\r\n  PanDetailData = () => {\r\n    const { companypan } = this.state;\r\n    // let panNumber = companypan;\r\n    // let dateOfInc = this.state.DOJ;\r\n    // console.log(\"ljskdf\", panNumber && panNumber);\r\n\r\n    // console.log(\"......\", dateOfInc && dateOfInc);\r\n\r\n    let obj = { panNumber: \"AAACG7496H\", dateOfInc: \"08/10/1973\" };\r\n    PanDetails(obj).then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        console.log(\"pan data\", response.data && response.data);\r\n        this.setState({\r\n          pan:\r\n            response.data && response.data.data\r\n              ? response.data.data.panName\r\n              : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GSTData = () => {\r\n    let objs = { panNumber: \"AAACG7496H\" };\r\n    GstNumber(objs).then(response => {\r\n      console.log(\"gst\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          GstDetails:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GetCompanyListData = () => {\r\n    let categoryid = 2;\r\n    getCompanytypeList(categoryid).then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        console.log(\r\n          \"Company Type Id\",\r\n          response.data.data && response.data.data\r\n        );\r\n        this.setState({\r\n          CompanytypeOption:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  Companyvalue = () => {\r\n    const { CompanytypeOption } = this.state;\r\n    console.log(\"bbbbbbbb\", CompanytypeOption && CompanytypeOption);\r\n\r\n    console.log(\r\n      \"DDDDDDD..\",\r\n      CompanytypeOption && CompanytypeOption.Companyvalue\r\n    );\r\n  };\r\n\r\n  GSTAddressDetails = () => {\r\n    const { gst } = this.state;\r\n    let ojbts = { gstNumber: gst && gst.gstNo };\r\n    console.log(\"hsgdhgdfGST\", ojbts && ojbts);\r\n\r\n    Gstaddress(ojbts).then(response => {\r\n      console.log(\"GST Address Details\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          GSTAddress:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GetallStateData = () => {\r\n    getAllState().then(response => {\r\n      console.log(\"GST All State\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          getState:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  GetAllCitiesData = () => {\r\n    const { stat } = this.state;\r\n    console.log(\"value.....\", stat && stat.name);\r\n\r\n    // console.log(\"getallcitiesdata------------------>\", stat);\r\n\r\n    getAllCities(stat && stat.name).then(response => {\r\n      console.log(\"GST All City\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          getCities:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getAllBranchList = () => {\r\n    BranchList().then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          branchListData:\r\n            response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const {\r\n      company,\r\n      contactname,\r\n      companypan,\r\n      gst,\r\n      stat,\r\n      remark,\r\n      city,\r\n      address,\r\n      status,\r\n      phoneNumber,\r\n      emailId,\r\n      bankName,\r\n      bankAccountName,\r\n      bankAccountno,\r\n      ifsccode,\r\n      hsncode,\r\n      statecode,\r\n      branch,\r\n      DOJ,\r\n      companyname,\r\n      pincode,\r\n      permanantAddress,\r\n      communicationAddress\r\n    } = this.state;\r\n\r\n    let gstStatus = \"true\";\r\n    // let phoneNumber = mobileNO;\r\n    let companyType = company && company.companyType;\r\n    // let companyname = this.state.pan;\r\n    let stateId = stat && stat.state_id;\r\n    let cityId = city && city.city_id;\r\n    // let bankAccountName = accountName;\r\n    // let bankAccountno = bankAccountNumber;\r\n    // let statecode = stateCode;\r\n    // let companypan = companypan;\r\n    let gstNumber = gst && gst.gstNo;\r\n    // let contactname = name;\r\n    let dateOfBirth = DOJ;\r\n    // let status = \"UNVERIFIED\";\r\n    let branchcode = branch && branch.branchcode;\r\n    // let permanantAddress = \"Plot No 14, , Khadan Layout, Meghraj Nagar MIDC T Point Wadi, Nagpur, Nagpur, Maharashtra, 440023\";\r\n\r\n    // let dateOfJoining = DOJ ? DOJ.format(\"x\") : null;\r\n    let dsaBranchmapping = [\r\n      {\r\n        employeeId: \"\",\r\n        branchcode\r\n      }\r\n    ];\r\n    let dsaData = {\r\n      gstStatus,\r\n      companyType,\r\n      companyname,\r\n      stateId,\r\n      cityId,\r\n      remark,\r\n      phoneNumber,\r\n      bankName,\r\n      bankAccountName,\r\n      bankAccountno,\r\n      ifsccode,\r\n      hsncode,\r\n      statecode,\r\n      dsaBranchmapping,\r\n      companypan,\r\n      gstNumber,\r\n      pincode,\r\n      permanantAddress,\r\n      communicationAddress,\r\n      dateOfBirth,\r\n      contactname,\r\n      emailId,\r\n      status\r\n    };\r\n\r\n    console.log(\"hgsdhgdf\", JSON.stringify(dsaData));\r\n\r\n    AddDSA(dsaData).then(response => {\r\n      if (response.data && response.data.error === \"false\") {\r\n        toast.success(\"DSA Added Successfully\", {\r\n          type: toast.TYPE.SUCCESS,\r\n          autoClose: 2000\r\n        });\r\n        console.log(response.data && response.data);\r\n      }\r\n      if (response.data && response.data.error === \"true\") {\r\n        toast.error(response.data.message, {\r\n          type: toast.TYPE.ERROR,\r\n          autoClose: 2000\r\n        });\r\n      }\r\n      this.handleClose();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      status,\r\n      company,\r\n      companyname,\r\n      companyType,\r\n      companypan,\r\n      DOJ,\r\n      show,\r\n      remark,\r\n      gst,\r\n      GSTOption,\r\n      stat,\r\n      stateOption,\r\n      getState,\r\n      city,\r\n      cityOption,\r\n      branch,\r\n      branchOption,\r\n      address,\r\n      contactname,\r\n      phoneNumber,\r\n      bankName,\r\n      bankAccountName,\r\n      bankAccountno,\r\n      ifsccode,\r\n      hsncode,\r\n      statecode,\r\n      getCities,\r\n      branchListData,\r\n      emailId,\r\n      GstDetails,\r\n      pincode,\r\n      CompanytypeOption,\r\n      permanantAddress,\r\n      communicationAddress,\r\n      DSAData\r\n    } = this.state;\r\n    console.log(DSAData);\r\n    console.log(CompanytypeOption);\r\n\r\n    // console.log(stat && stat.name);\r\n\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <Modal\r\n          className=\"add-user\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={show && show}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>DSA FORM</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"p-4\" style={{ background: \"#f8f9fa\" }}>\r\n            <div className=\"row\">\r\n              <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">\r\n                    Company Details\r\n                  </h5>\r\n                  <div className=\"col-md-4\">\r\n                    <label>Type Of Comapany</label>\r\n                    <Select\r\n                      value={company}\r\n                      onChange={this.handleStatus}\r\n                      name=\"company\"\r\n                      options={CompanytypeOption}\r\n                      placeholder=\"Type Of Comapny\"\r\n                      valueKey=\"id\"\r\n                      labelKey=\"subcat_type\"\r\n                      getOptionLabel={option => option[\"subcat_type\"]}\r\n                      getOptionValue={option => option[\"id\"]}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>PAN Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"companypan\"\r\n                      value={companypan}\r\n                      onChange={this.handlePan}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"PAN Number\"\r\n                      disabled\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Date Of Birth / Date Of Inacorportion</label>\r\n                    <br />\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-input\"\r\n                      name=\"DOJ\"\r\n                      value={DOJ}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Date Of Birth / Date Of Inacorportion\"\r\n                    />\r\n                    {/* {\r\n                            errors.DOBError &&\r\n                            <span className=\"errorMsg\">Please select date</span>\r\n                        } */}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Company Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"companyname\"\r\n                      value={companyname}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Company Name\"\r\n                      disabled\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  {/* <div className=\"custom-control custom-checkbox col-md-12 text-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"defaultUnchecked\"\r\n                    />\r\n                    <label className=\"custom-control-label\" for=\"defaultUnchecked\">\r\n                      <span></span>Do You Have The GST?\r\n                    </label>\r\n                  </div> */}\r\n\r\n                  <div className=\"custom-control custom-checkbox col-md-4 mt-4\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"defaultUnchecked\"\r\n                    />\r\n\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      for=\"defaultUnchecked\"\r\n                    >\r\n                      <span></span>Do You Have GST?\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>GST</label>\r\n                    <Select\r\n                      value={gst}\r\n                      onChange={this.handleGST}\r\n                      // onBlur={() => this.onValidate(\"role\")}\r\n                      options={GstDetails}\r\n                      // name=\"gst\"\r\n                      placeholder=\"GST\"\r\n                      labelKey=\"gstNo\"\r\n                      valueKey=\"id\"\r\n                      getOptionLabel={option => option[\"gstNo\"]}\r\n                      getOptionValue={option => option[\"id\"]}\r\n                    />\r\n                    {/* {errors.gstError && (\r\n                    <span className=\"errorMsg\">Please select role</span>\r\n                    )} */}\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-md-4\">\r\n                    <label>State</label>\r\n                    <Select\r\n                      value={state}\r\n                      onChange={this.handlestate}\r\n                    \r\n                      options={stateOption}\r\n                      name=\"state\"\r\n                      placeholder=\"State\"\r\n                    />\r\n                    \r\n                  </div> */}\r\n                </div>\r\n              </section>\r\n\r\n              <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">\r\n                    Address Details\r\n                  </h5>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>State</label>\r\n                    <Select\r\n                      value={stat}\r\n                      onChange={this.handlestateName}\r\n                      // onBlur={() => this.onValidate(\"role\")}\r\n                      options={getState}\r\n                      // name=\"stat\"\r\n                      placeholder=\"State\"\r\n                      valueKey=\"state_id\"\r\n                      labelKey=\"name\"\r\n                      getOptionLabel={option => option[\"name\"]}\r\n                      getOptionValue={option => option[\"state_id\"]}\r\n                    />\r\n\r\n                    {/* {errors.stateError && (\r\n                    <span className=\"errorMsg\">Please select role</span>\r\n                    )} */}\r\n                  </div>\r\n\r\n                  <div className=\" col-md-4\">\r\n                    <label>City</label>\r\n                    <Select\r\n                      value={city}\r\n                      onChange={this.handleCity}\r\n                      // onBlur={() => this.onValidate(\"role\")}\r\n                      options={getCities}\r\n                      // name=\"city\"\r\n                      placeholder=\"City\"\r\n                      valueKey=\"city_id\"\r\n                      labelKey=\"name\"\r\n                      getOptionLabel={option => option[\"name\"]}\r\n                      getOptionValue={option => option[\"city_id\"]}\r\n                    />\r\n                    {/* {errors.cityError && (\r\n                    <span className=\"errorMsg\">Please select role</span>\r\n                    )} */}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>Branch</label>\r\n                    <Select\r\n                      value={branch}\r\n                      onChange={this.handleBranch}\r\n                      // onBlur={() => this.onValidate(\"role\")}\r\n                      isMulti\r\n                      options={branchListData}\r\n                      name=\"branch\"\r\n                      placeholder=\"Branch\"\r\n                      valueKey=\"branchcode\"\r\n                      labelKey=\"branchname\"\r\n                      getOptionLabel={option => option[\"branchname\"]}\r\n                      getOptionValue={option => option[\"branchcode\"]}\r\n                    />\r\n                    {/* {errors.cityError && (\r\n                    <span className=\"errorMsg\">Please select role</span>\r\n                    )} */}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-4\">\r\n                    <label>Pin Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      name=\"pincode\"\r\n                      value={pincode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Pin Code\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-4\">\r\n                    <label>Contach Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"contactname\"\r\n                      value={contactname}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Contact Name\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\" col-md-4 mt-4\">\r\n                    <label>Mobile Number</label>\r\n                    {/* <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      maxLength=\"10\"\r\n                      value={mobileNO}\r\n                      name=\"mobileNo\"\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Mobile Number\"\r\n                    /> */}\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      name=\"phoneNumber\"\r\n                      maxLength=\"10\"\r\n                      value={phoneNumber}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Mobile Number\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-4\">\r\n                    <label>Email Id</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-input\"\r\n                      value={emailId}\r\n                      name=\"emailId\"\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Email Id\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-3\">\r\n                    <label>Register Address</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"permanantAddress\"\r\n                      value={permanantAddress}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Register Address\"\r\n                    />\r\n                    {/* {errors.addressError && (\r\n                  <span className=\"errorMsg\">Please enter address</span>\r\n                )} */}\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4 mt-3\">\r\n                    <label>Commuication Address</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"communicationAddress\"\r\n                      value={communicationAddress}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Commuication Address\"\r\n                    />\r\n                    {/* {errors.addressError && (\r\n                  <span className=\"errorMsg\">Please enter address</span>\r\n                )} */}\r\n                  </div>\r\n                </div>\r\n              </section>\r\n\r\n              <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">Bank Details</h5>\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Bank Account Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"bankAccountName\"\r\n                      value={bankAccountName}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Account Number\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Bank Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"bankName\"\r\n                      value={bankName}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Bank Name\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>Bank Account Number</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      name=\"bankAccountno\"\r\n                      value={bankAccountno}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Bank Account Number\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>IFSC Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      name=\"ifsccode\"\r\n                      value={ifsccode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter IFSC Code\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>HSN Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      name=\"hsncode\"\r\n                      value={hsncode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter HSN Code\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  <div className=\"form-group col-md-4\">\r\n                    <label>State Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      name=\"statecode\"\r\n                      value={statecode}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter State Code\"\r\n                    />\r\n                    {\r\n                      // errors.bloodGroupError &&\r\n                      // <span className=\"errorMsg\">Please enter blood group</span>\r\n                    }\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-md-4\">\r\n                    <label>View PAN Card</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload PAN\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>View Adhar Card</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Adhar\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4\">\r\n                    <label>View Shopact</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Shopact\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4 mt-3\">\r\n                    <label>View Cancelled Cheque</label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Cancelled Cheque\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-4 mt-3\">\r\n                    <label>View Agreement </label>\r\n                    <ImageUploader\r\n                      withIcon={true}\r\n                      withPreview={true}\r\n                      withLabel={true}\r\n                      accept=\"image/*\"\r\n                      buttonText=\"Upload Agreement\"\r\n                      onChange={this.onDrop}\r\n                      fileTypeError=\"is not supported file extension\"\r\n                      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                      maxFileSize={5242880}\r\n                    />\r\n                  </div> */}\r\n\r\n                  <div className=\"form-group col-md-4 mt-3\">\r\n                    <label>Remark</label>\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      name=\"remark\"\r\n                      value={remark}\r\n                      onChange={this.handleChange}\r\n                      onBlur={this.handleValidate}\r\n                      placeholder=\"Enter Remark\"\r\n                    />\r\n                    {/* {errors.addressError && (\r\n                  <span className=\"errorMsg\">Please enter address</span>\r\n                  )} */}\r\n                  </div>\r\n\r\n                  {/* <div className=\"col-md-6\">\r\n                    <label>Status</label>\r\n                    <Select\r\n                      value={status}\r\n                      onChange={this.handleStatus}\r\n                      name=\"status\"\r\n                      options={statusOption}\r\n                      placeholder=\"Status\"\r\n                    />\r\n                    </div> */}\r\n\r\n                  {/* <div className=\"col-md-4\">\r\n                        <label>Profile Picture</label>\r\n                        <ImageUploader\r\n                            withIcon={true}\r\n                            withPreview={true}\r\n                            withLabel={true}\r\n                            accept=\"image/*\"\r\n                            buttonText='Upload Profile Picture'\r\n                            onChange={this.onDrop}\r\n                            fileTypeError=\"is not supported file extension\"\r\n                            imgExtension={['.jpg', '.gif', '.png', '.jpeg']}\r\n                            maxFileSize={5242880}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <label>Gender</label>\r\n                        <div className=\"mt-2\">\r\n                            <label>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    className=\"mr-3\"\r\n                                    name=\"gender\"\r\n                                    value=\"Male\"\r\n                                    checked={gender === \"Male\"}\r\n                                    onBlur={this.handleValidate}\r\n                                    onChange={this.onChanged} />\r\n                                Male </label>\r\n                            <label className=\"ml-2\">\r\n                                <input\r\n                                    className=\"ml-2 mr-3\"\r\n                                    type=\"radio\"\r\n                                    name=\"gender\"\r\n                                    value=\"Female\"\r\n                                    onBlur={this.handleValidate}\r\n                                    checked={gender === \"Female\"}\r\n                                    onChange={this.onChanged} />\r\n                                Female </label>\r\n                        </div>\r\n                        {\r\n                            errors.genderError &&\r\n                            <span className=\"errorMsg\">Please select gender</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Blood Group</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"bloodGroup\"\r\n                            value={bloodGroup}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Blood Group\" />\r\n                        {\r\n                            errors.bloodGroupError &&\r\n                            <span className=\"errorMsg\">Please enter blood group</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Official Email ID</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"officialEmail\"\r\n                            value={officialEmail}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Official Email\" />\r\n                        {\r\n                            errors.officialEmailError &&\r\n                            <span className=\"errorMsg\">Please enter email</span>\r\n                        }\r\n                        {\r\n                            invalidofficialEmail &&\r\n                            <span className=\"errorMsg\">Please enter valid email</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Personal Email ID</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"personalEmail\"\r\n                            value={personalEmail}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Personal Email\" />\r\n                        {\r\n                            errors.personalEmailError &&\r\n                            <span className=\"errorMsg\">Please enter email</span>\r\n                        }\r\n                        {\r\n                            invalidpersonalEmail &&\r\n                            <span className=\"errorMsg\">Please enter valid email</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Primary Mobile No.</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"\\d*\"\r\n                            maxLength=\"10\"\r\n                            className=\"form-input\"\r\n                            name=\"primaryMobileNo\"\r\n                            value={primaryMobileNo}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            onKeyPress={this.restrictAlphabets}\r\n                            placeholder=\"Enter primary mobile number\" />\r\n                        {\r\n                            errors.primaryMobileNoError &&\r\n                            <span className=\"errorMsg\">Please enter mobile number</span>\r\n                        }\r\n                        {\r\n                            invalidprimaryMobileNo &&\r\n                            <span className=\"errorMsg\">Please enter valid mobile number</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Secondary Mobile No.</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"\\d*\"\r\n                            maxLength=\"10\"\r\n                            className=\"form-input\"\r\n                            name=\"secondaryMobileNo\"\r\n                            value={secondaryMobileNo}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            onKeyPress={this.restrictAlphabets}\r\n                            placeholder=\"Enter secondary mobile number\" />\r\n                        {\r\n                            errors.secondaryMobileNoError &&\r\n                            <span className=\"errorMsg\">Please enter mobile number</span>\r\n                        }\r\n                        {\r\n                            invalidsecondaryMobileNo &&\r\n                            <span className=\"errorMsg\">Please enter valid mobile number</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Aadhar Card No.</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            pattern=\"\\d*\"\r\n                            maxLength=\"12\"\r\n                            className=\"form-input\"\r\n                            name=\"aadharNo\"\r\n                            value={aadharNo}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            onKeyPress={this.restrictAlphabets}\r\n                            placeholder=\"Enter aadhar number\" />\r\n                        {\r\n                            errors.aadharNoError &&\r\n                            <span className=\"errorMsg\">Please enter aadhar number</span>\r\n                        }\r\n                        {\r\n                            invalidaadharNo &&\r\n                            <span className=\"errorMsg\">Please enter valid aadhar number</span>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <label>Bank Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-input\"\r\n                            name=\"bankName\"\r\n                            value={bankName}\r\n                            onChange={this.handleChange}\r\n                            onBlur={this.handleValidate}\r\n                            placeholder=\"Enter Bank Name\" />\r\n                        {\r\n                            errors.bankNameError &&\r\n                            <span className=\"errorMsg\">Please enter bank name</span>\r\n                        }\r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-4\">\r\n                        <label>Date Of Joining</label><br />\r\n                        <DatePicker\r\n                            className=\"form-input\"\r\n                            selected={DOJ}\r\n                            onBlur={() => this.onValidate('DOJ')}\r\n                            onChange={this.handleDOJChange}\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            placeholderText=\"YYYY-MM-DD\"\r\n                            showYearDropdown\r\n                            showMonthDropdown\r\n                        />\r\n                        {\r\n                            errors.DOJError &&\r\n                            <span className=\"errorMsg\">Please select date</span>\r\n                        }\r\n                    </div>\r\n                   \r\n                    <div className=\"col-md-4\">\r\n                        <label>Status</label>\r\n                        <Select\r\n                            value={status}\r\n                            onChange={this.handleStatus}\r\n                            name = \"status\"\r\n                           \r\n                            options={statusOption}\r\n                            \r\n                            placeholder=\"Status\"\r\n                        /> \r\n                    </div> */}\r\n                </div>\r\n              </section>\r\n\r\n              {/* <section className=\"tab-body mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <h5 className=\"col-md-12 text-center mb-4\">Checker Remark</h5>\r\n                  <div className=\"col-md-6\">\r\n                    <label>DSA Status</label>\r\n                    <Select\r\n                      value={status}\r\n                      onChange={this.handleRemark}\r\n                      name=\"status\"\r\n                      options={statusOption}\r\n                      placeholder=\"Status\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label>DSA Status</label>\r\n                    <Select\r\n                      value={status}\r\n                      onChange={this.handleRemark}\r\n                      name=\"status\"\r\n                      options={statusOption}\r\n                      placeholder=\"Status\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </section> */}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <div className=\"footer-modal\">\r\n              <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n                Reject\r\n              </Button>\r\n\r\n              <Button className=\"btn-success\" onClick={this.handleClose}>\r\n                Accept\r\n              </Button>\r\n              <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n                On Hold\r\n              </Button>\r\n            </div>\r\n            <Button className=\"btn-danger\" onClick={this.handleClose}>\r\n              Cancel\r\n            </Button>\r\n            {/* <Button className=\"btn-success\" onClick={this.handleSubmit}>\r\n              {this.props.editObj ? \"Update\" : \"Create\"}\r\n            </Button> */}\r\n            {/* <Button className=\"btn-success\" onClick={this.GetAllCitiesData}>\r\n              {this.props.editObj ? \"Update\" : \"Create\"}\r\n            </Button> */}\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DsaMakerForm;\r\n","import React, { Component } from \"react\";\r\nimport LeftMenu from \"../../Components/LeftMenu\";\r\nimport Header from \"../../Components/Header\";\r\nimport DSACheckerForm from \"../DSA/DSACheckerForm\";\r\nimport { getAllDSA } from \"../../Utils/dsa\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nexport class DsaCheker extends Component {\r\n  state = {\r\n    search: \"\",\r\n    // dsaData: \"\",\r\n    verifyObj: \"\",\r\n    showModal: false,\r\n    DSAData: []\r\n  };\r\n\r\n  //   handleChange = e => {\r\n  //     this.setState({\r\n  //       [e.target.name]: e.target.value\r\n  //     });\r\n  //   };\r\n\r\n  componentDidMount() {\r\n    this.GetAllDsaList();\r\n  }\r\n\r\n  GetAllDsaList = () => {\r\n    let UNVERIFY = \"UNVERIFIED\";\r\n    getAllDSA(UNVERIFY).then(response => {\r\n      console.log(\"DSA\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          DSAData: response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addDsa = id => {\r\n    let dsaData = this.state.DSAData.find(\r\n      dsaData => dsaData.applicationnumber === id\r\n    );\r\n    console.log(\"jhhdgsh\", dsaData && dsaData);\r\n\r\n    this.setState(\r\n      {\r\n        showModal: !this.state.showModal,\r\n        verifyObj: dsaData ? dsaData.applicationnumber : null\r\n      },\r\n      () => this.GetAllDsaList()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { search, DSAData, verifyObj, showModal } = this.state;\r\n    console.log(\"verifyObj\", verifyObj);\r\n\r\n    const columns = [\r\n      {\r\n        Header: \"Application Number\",\r\n        Cell: ({ original }) => {\r\n          return original.applicationnumber;\r\n          // return (onclick = () => this.addDsa(original.dsacode));\r\n        }\r\n      },\r\n      {\r\n        Header: \"Company Name\",\r\n        Cell: ({ original }) => {\r\n          return original.companyname;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Company Pan\",\r\n        Cell: ({ original }) => {\r\n          return original.companypan;\r\n        }\r\n      },\r\n\r\n      {\r\n        Header: \"Email Id\",\r\n        Cell: ({ original }) => {\r\n          return original.emailId;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Mobile Number\",\r\n        Cell: ({ original }) => {\r\n          return original.phone_number;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        Cell: ({ original }) => {\r\n          return original.status;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Action\",\r\n        accessor: \"edit\",\r\n\r\n        Cell: ({ original }) => {\r\n          return (\r\n            <div>\r\n              <i\r\n                onClick={() => this.addDsa(original.applicationnumber)}\r\n                className=\"fas fa-user-edit\"\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"dash_grid\">\r\n        <LeftMenu />\r\n        <main className=\"bg-white\">\r\n          <Header {...this.props} />\r\n          <section className=\"container-fluid\">\r\n            <h5 className=\"text-center mt-5 mx-auto user-box\">DSA Checker</h5>\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              <div className=\"form-group m-0 search-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"search\"\r\n                  value={search}\r\n                  //   onChange={this.handleChange}\r\n                  // onBlur={this.handleValidate}\r\n                  placeholder=\"Search...\"\r\n                />\r\n              </div>\r\n              {/* <button onClick={this.addDsa} className=\"add-btn ml-auto\">\r\n                {\" \"}\r\n                Check DSA{\" \"}\r\n              </button>\r\n              {this.state.showModal && (\r\n                <DSACheckerForm addDsa={this.addDsa} verifyObj={verifyObj} />\r\n              )} */}\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <ReactTable\r\n                data={DSAData}\r\n                columns={columns}\r\n                defaultPageSize={10}\r\n              />\r\n            </div>\r\n            {showModal && (\r\n              <DSACheckerForm addDsa={this.addDsa} verifyObj={verifyObj} />\r\n            )}\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DsaCheker;\r\n","import React, { Component } from \"react\";\r\nimport LeftMenu from \"../../Components/LeftMenu\";\r\nimport Header from \"../../Components/Header\";\r\nimport DsaMakerForm from \"../DSA/DsaMakerForm\";\r\nimport { getAllDSA } from \"../../Utils/dsa\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nexport class Dsa extends Component {\r\n  state = {\r\n    search: \"\",\r\n    dsaData: \"\",\r\n    showModal: false,\r\n    DSAData: []\r\n  };\r\n\r\n  //   handleChange = e => {\r\n  //     this.setState({\r\n  //       [e.target.name]: e.target.value\r\n  //     });\r\n  //   };\r\n\r\n  componentDidMount() {\r\n    this.GetAllDsaList();\r\n  }\r\n\r\n  GetAllDsaList = () => {\r\n    let UNVERIFY = \"APPROVED\";\r\n    getAllDSA(UNVERIFY).then(response => {\r\n      console.log(\"DSA\", response.data && response.data);\r\n      if (response.data && response.data.error === \"false\") {\r\n        this.setState({\r\n          DSAData: response.data && response.data.data ? response.data.data : []\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addDsa = () => {\r\n    this.setState({\r\n      showModal: !this.state.showModal\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { search, dsaData, DSAData } = this.state;\r\n    const columns = [\r\n      {\r\n        Header: \"Company Name\",\r\n        Cell: ({ original }) => {\r\n          return original.companyname;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Company Pan\",\r\n        Cell: ({ original }) => {\r\n          return original.companypan;\r\n        }\r\n      },\r\n      {\r\n        Header: \"DSA code\",\r\n        Cell: ({ original }) => {\r\n          return original.dsacode;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Email Id\",\r\n        Cell: ({ original }) => {\r\n          return original.emailId;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Phone Number\",\r\n        Cell: ({ original }) => {\r\n          return original.phone_number;\r\n        }\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        Cell: ({ original }) => {\r\n          return original.status;\r\n        }\r\n      }\r\n    ];\r\n    return (\r\n      <div className=\"dash_grid\">\r\n        <LeftMenu />\r\n        <main className=\"bg-white\">\r\n          <Header {...this.props} />\r\n          <section className=\"container-fluid\">\r\n            <h5 className=\"text-center mt-5 mx-auto user-box\">DSA</h5>\r\n            <div className=\"d-flex align-items-center mt-5\">\r\n              <div className=\"form-group m-0 search-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-input\"\r\n                  name=\"search\"\r\n                  value={search}\r\n                  //   onChange={this.handleChange}\r\n                  // onBlur={this.handleValidate}\r\n                  placeholder=\"Search...\"\r\n                />\r\n              </div>\r\n              {/* <button onClick={this.addDsa} className=\"add-btn ml-auto\">\r\n                {\" \"}\r\n                Add DSA{\" \"}\r\n              </button> */}\r\n              {this.state.showModal && <DsaMakerForm addDsa={this.addDsa} />}\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <ReactTable\r\n                data={DSAData}\r\n                columns={columns}\r\n                defaultPageSize={10}\r\n              />\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dsa;\r\n","import React from \"react\";\nimport RoleManagement from \"../src/modules/management/RoleManagement\";\nimport UserManagement from \"../src/modules/management/UserManagement\";\nimport ChangePassword from \"../src/Pages/ChangePassword\";\nimport Login from \"../src/Pages/Login\";\nimport ForgetPassword from \"../src/Pages/ForgetPassword\";\nimport ResetPassword from \"../src/Pages/ResetPassword\";\nimport DsaMaker from \"../src/modules/DSA/DsaMaker\";\nimport DsaCheker from \"../src/modules/DSA/DsaCheker\";\nimport Dsa from \"../src/modules/DSA/Dsa\";\n// import DsaMakerForm from \"../src/modules/DSA/DsaMakerForm\";\nimport { Route, Switch } from \"react-router\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/role-management\" component={RoleManagement} />\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/forgetpassword\" component={ForgetPassword} />\n        <Route exact path=\"/resetpassword\" component={ResetPassword} />\n        <Route exact path=\"/user-management\" component={UserManagement} />\n        <Route exact path=\"/change-password\" component={ChangePassword} />\n        <Route exact path=\"/dsa-maker\" component={DsaMaker} />\n        <Route exact path=\"/dsa-checker\" component={DsaCheker} />\n        <Route exact path=\"/dsa\" component={Dsa} />\n        {/* <Route exact path=\"/dsa-form\" component={DsaMakerForm} /> */}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}